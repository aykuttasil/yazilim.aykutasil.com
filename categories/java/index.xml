<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Java on Software</title>
    <link>https://yazilim.aykutasil.com/categories/java/</link>
    <description>Recent content in Java on Software</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>tr</language>
    <lastBuildDate>Wed, 11 Jan 2017 19:59:08 +0300</lastBuildDate>
    
	<atom:link href="https://yazilim.aykutasil.com/categories/java/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Android ile WebView EtkileÅŸimi</title>
      <link>https://yazilim.aykutasil.com/android-webview-etkilesimi/</link>
      <pubDate>Wed, 11 Jan 2017 19:59:08 +0300</pubDate>
      
      <guid>https://yazilim.aykutasil.com/android-webview-etkilesimi/</guid>
      <description>KÄ±sa Hikaye : ÃœstÃ¼nde Ã§alÄ±ÅŸmakta olduÄŸum bir projede kredi kartÄ± ile Ã¶deme yapÄ±sÄ± kurmam gerekti. KÄ±saca projenin yapÄ±sÄ±ndan bahsedecek olursak
 Backend : .Net Client : Android (Java) Ã–deme altyapÄ±sÄ± : Ä°yzico  Client tarafÄ±nda rest isteÄŸiyle tÃ¼m iÅŸlemlerimizi backend tarafÄ±nda yapÄ±yoruz. Ã–deme yapÄ±mÄ±zÄ± da bu doÄŸrultuda geliÅŸtirdik.
Problem : 3DS ile Ã¶deme almaya Ã§alÄ±ÅŸtÄ±ÄŸÄ±mÄ±zda malumunuz iÅŸin iÃ§erisine bankanÄ±n bize telefonumuza gelen ÅŸifreyi girmemiz iÃ§in gÃ¶ndermiÅŸ olduÄŸu web sayfasÄ± vs.</description>
    </item>
    
    <item>
      <title>ExecutorService submit() â€“ execute()</title>
      <link>https://yazilim.aykutasil.com/post/java_executorservice_submit_execute/</link>
      <pubDate>Wed, 11 Jan 2017 19:26:49 +0300</pubDate>
      
      <guid>https://yazilim.aykutasil.com/post/java_executorservice_submit_execute/</guid>
      <description>ExecutorService submit() â€“ execute() Link : http://javarevisited.blogspot.com.tr/2016/04/difference-between-ExecutorServie-submit-vs-Executor-execute-method-in-Java.html</description>
    </item>
    
    <item>
      <title>Executor newCachedThreadPool() newFixedThreadPool(n) newSingleThreadExecutor()</title>
      <link>https://yazilim.aykutasil.com/post/java_executor_service_threadpool/</link>
      <pubDate>Wed, 11 Jan 2017 18:55:08 +0300</pubDate>
      
      <guid>https://yazilim.aykutasil.com/post/java_executor_service_threadpool/</guid>
      <description>Executor newCachedThreadPool() newFixedThreadPool(n) newSingleThreadExecutor() Thread kullanÄ±mÄ±, Java ile multi-threading yazÄ±lÄ±m geliÅŸtiriyorsanÄ±z mutlaka ama mutlaka bilmeniz gereken konulardan biridir.
ThreadPool GÃ¼n geldi Ã§attÄ± ve uygulamanÄ±z ilk kurulduÄŸu amacÄ±n evrimleÅŸmesi sonucu bambaÅŸka bir hale bÃ¼rÃ¼ndÃ¼ ğŸ™‚
Yani birÃ§ok uygulamada gidiÅŸat bu yÃ¶ndedir ve olmasÄ± gerekende budur.
AynÄ± anda 1000 den fazla kullanÄ±cÄ±ya cevap verme gereksinimiz var artÄ±k. Sadece patron kullanmÄ±yor sonuÃ§ta. Ya da patron Ã¶yle bir uygulama istemiÅŸki aÄŸÄ±r iÅŸler gerektiriyor. Uzun sÃ¼reler gerektiren iÅŸlemler sonucunda akÄ±ÅŸ tamamlanÄ±yor vs.</description>
    </item>
    
    <item>
      <title>Runnable() &amp; Callable()</title>
      <link>https://yazilim.aykutasil.com/post/java_runnable_callable/</link>
      <pubDate>Wed, 11 Jan 2017 18:55:08 +0300</pubDate>
      
      <guid>https://yazilim.aykutasil.com/post/java_runnable_callable/</guid>
      <description>Runnable() &amp;amp; Callable() AyrÄ±ntÄ±lÄ± aÃ§Ä±klama iÃ§in bu siteyi kullanabilirsiniz.</description>
    </item>
    
    <item>
      <title>Android Runtime Permission</title>
      <link>https://yazilim.aykutasil.com/post/android_runtime_permission/</link>
      <pubDate>Wed, 11 Jan 2017 17:24:52 +0300</pubDate>
      
      <guid>https://yazilim.aykutasil.com/post/android_runtime_permission/</guid>
      <description>YavaÅŸ yavaÅŸ mevcut android cihazlarÄ±nÄ±n API level dÃ¼zeyi doÄŸal olarak yÃ¼kselmekte ve bizlerinde tabi ki buna ayak uydurmasÄ± gerekmekte.
Bunlardan biri de Android M â€“ Marshmallow (23) ile gelen Runtime Permissions olayÄ±.
KullanÄ±cÄ± aÃ§Ä±sÄ±ndan bakÄ±ldÄ±ÄŸÄ±nda oldukÃ§a yararlÄ± birÅŸey gibi duruyor ama tabi ki biz kullanÄ±cÄ±lar runtime sÄ±rasÄ±nda Ã§Ä±kan permission dialog daki yazÄ±yÄ± ne kadar okuruz ve buna gÃ¶re onay veririz meÃ§hul. AslÄ±na bakarsanÄ±z Ã§ok da okunacaÄŸÄ±nÄ± dÃ¼ÅŸÃ¼nmÃ¼yorum ama olsun yine de gÃ¼zel.</description>
    </item>
    
    <item>
      <title>Android Glide ve Palette KullanÄ±mÄ±</title>
      <link>https://yazilim.aykutasil.com/post/android_glide_palette/</link>
      <pubDate>Wed, 11 Jan 2017 17:11:30 +0300</pubDate>
      
      <guid>https://yazilim.aykutasil.com/post/android_glide_palette/</guid>
      <description>Google Ä±n resim iÅŸlemleri iÃ§in geliÅŸtirmiÅŸ olduÄŸu Glide kÃ¼tÃ¼phanesi Android kaynaklarÄ±nÄ±, cache mekanizmasÄ±nÄ± vs. verimli ÅŸekilde kullanarak uygulamanÄ±za hÄ±z ve kalite kazandÄ±rÄ±r.
Sizde projenizde resimlerle ilgili herhangi bir iÅŸlem yapÄ±yorsanÄ±z bu kÃ¼tÃ¼phaneyi incelemenizi tavsiye ediyorum.
 Github : https://github.com/bumptech/glide
 Gradle : compile â€˜com.github.florent37:glidepalette:1.0.6â€™
  Google Ä±n geliÅŸtirmiÅŸ olduÄŸu Palette kÃ¼tÃ¼phanesi ise, resimlerinizin renkleriyle ilgilenir. Daha farklÄ± iÅŸlemler iÃ§inde kullanÄ±labilir resim boyutlandÄ±rma vs. gibi. Ama renklerle ilgili iÅŸlemler iÃ§in oldukÃ§a gÃ¼zel bir kÃ¼tÃ¼phanedir.</description>
    </item>
    
    <item>
      <title>Android ViewPager</title>
      <link>https://yazilim.aykutasil.com/post/android_viewpager/</link>
      <pubDate>Wed, 11 Jan 2017 17:07:51 +0300</pubDate>
      
      <guid>https://yazilim.aykutasil.com/post/android_viewpager/</guid>
      <description>Android ViewPager yapÄ±sÄ± iÃ§erisinde birÃ§ok hazÄ±r fonksiyonu, animasyonu ve Ã¶zelleÅŸtirilebilir kontrolleri barÄ±ndÄ±rÄ±r.
Ä°htiyaÃ§larÄ±mÄ±z doÄŸrultusunda bu yapÄ±yÄ± Ã¶zelleÅŸtirebilir ve ViewPager Ä±n bize sunmuÅŸ olduÄŸu rahatlÄ±ÄŸÄ± kullanabiliriz.
 </description>
    </item>
    
    <item>
      <title>Java Collections</title>
      <link>https://yazilim.aykutasil.com/post/java_collections/</link>
      <pubDate>Wed, 11 Jan 2017 16:10:10 +0300</pubDate>
      
      <guid>https://yazilim.aykutasil.com/post/java_collections/</guid>
      <description> Collections.swap Swap kelime anlamÄ± ile takas anlamÄ±na gelmektedir. Mevcut dizimiz iÃ§erisinde elemanlarÄ±n yerlerini deÄŸiÅŸtirmeye yarar.
private static final String[] STRINGS = new String[]{ &amp;quot;1&amp;quot;, &amp;quot;2&amp;quot;, &amp;quot;3&amp;quot;, &amp;quot;4&amp;quot;, &amp;quot;5&amp;quot; }; private final List mItems = new ArrayList&amp;lt;&amp;gt;(); public void setArray() { mItems.addAll(Arrays.asList(STRINGS)); } mItems listemizi yazdÄ±rdÄ±ÄŸÄ±mÄ±zda sonuÃ§ ÅŸu ÅŸekilde olacaktÄ±r. // 1,2,3,4,5 private void elemanYerDegistir() { Collections.swap(mItems, 0, 4); } mItems listemizi yazdÄ±rdÄ±ÄŸÄ±mÄ±zda sonuÃ§ ÅŸu ÅŸekilde olacaktÄ±r. // 5,2,3,4,1  </description>
    </item>
    
    <item>
      <title>Foreground Service ile FusedLocationApi KullanÄ±mÄ±</title>
      <link>https://yazilim.aykutasil.com/post/android_foregroundservice_fusedlocationapi/</link>
      <pubDate>Wed, 11 Jan 2017 15:27:59 +0300</pubDate>
      
      <guid>https://yazilim.aykutasil.com/post/android_foregroundservice_fusedlocationapi/</guid>
      <description>Android service yapÄ±sÄ±, Androidâ€™in temel bileÅŸenlerinden olup genel kullanÄ±m amacÄ± yan iÅŸ parÃ§acÄ±ÄŸÄ± oluÅŸturmaktÄ±r. Uzun sÃ¼ren iÅŸlemler (download vb.) iÃ§in olmazsa olmaz bileÅŸendir. Android in service bileÅŸenini kendi ihtiyaÃ§larÄ±nÄ±z doÄŸrultusunda Ã¶zelleÅŸtirebilir ve uygulamanÄ±zÄ± modern bir yapÄ±ya kavuÅŸturabilirsiniz.
Burada yapacaÄŸÄ±mÄ±z Ã¶rnekte kÄ±saca ÅŸu aÅŸamalarÄ± gÃ¶rÃ¼cez;
 Service i foreground olarak baÅŸlatmak Ongoing(devamlÄ± gÃ¶zÃ¼ken) notification oluÅŸturmak GoogleApiClient a baÄŸlanmak Location bilgisini notification da gÃ¶stermek  Ä°lk olarak Service imiz kodlarÄ±nÄ± yazalÄ±m. Gerekli aÃ§Ä±klamalar kodlarÄ±n arasÄ±nda mevcuttur.</description>
    </item>
    
    <item>
      <title>Android GcmNetworkManager KullanÄ±mÄ±</title>
      <link>https://yazilim.aykutasil.com/post/android_gcmnetworkmanager/</link>
      <pubDate>Wed, 11 Jan 2017 01:43:53 +0300</pubDate>
      
      <guid>https://yazilim.aykutasil.com/post/android_gcmnetworkmanager/</guid>
      <description>GcmNetworkManager kullanarakÂ Android de network tabanlÄ± iÅŸlemlerinizi olabildiÄŸince kontrollÃ¼ bir ÅŸekide yapabilirsiniz.
GcmNetworkManager Ä±n kullanÄ±m alanÄ± daha Ã§ok asenkron ve periodic network iÅŸlemlerinizi yapÄ±landÄ±rmaktÄ±r.
Tek sefer Ã§alÄ±ÅŸacak veya Periodic olarak Ã§alÄ±ÅŸacak iÅŸlemleriniz iÃ§in 2 tip belirlenmiÅŸtir.
 OneoffTask PeriodicTask  OneoffTask KullanÄ±mÄ±
OneoffTask oneoff = new OneoffTask.Builder() // UygulamanÄ±zÄ± kapatsanÄ±z bile tekrar aÃ§tÄ±ÄŸÄ±nÄ±z da network iÅŸleminiz iÅŸleme konulur. // Yani isteÄŸinizin kalÄ±cÄ± olup olmamasÄ±nÄ± bu parametre ile ayarlayabilirsiniz. .setPersisted(true) // Belirtilen network iÅŸlemlerinin Ã§alÄ±ÅŸacaÄŸÄ± service i belirtir.</description>
    </item>
    
    <item>
      <title>Android SMS Receiver</title>
      <link>https://yazilim.aykutasil.com/post/android_sms_receiver/</link>
      <pubDate>Wed, 11 Jan 2017 01:42:54 +0300</pubDate>
      
      <guid>https://yazilim.aykutasil.com/post/android_sms_receiver/</guid>
      <description>Android SMS Receiver Android de gelen sms leri dinlemek ve uygulamanÄ±zÄ±n akÄ±ÅŸÄ±nÄ± gelen sms lere gÃ¶re ÅŸekillendirmek iÃ§in aÅŸaÄŸÄ±daki yapÄ±yÄ± kullanabilirsiniz.
Ä°lk olarak AndroidManifest.xml dosyanÄ±zda receiver tanÄ±mlamalÄ±sÄ±nÄ±z. Fakat biz bu receiver Ä± dinamik olarak tanÄ±mlÄ±caz. Bunu yapmamÄ±zÄ±n sebebi SMS i dinledikten sonra bu receiver Ä± silmek ve daha sonra gelen SMS lerin dinlenmesini Ã¶nlemek.
Siz uygulamÄ±nÄ±z da sÃ¼rekli bir SMS dinlemeye ihtiyaÃ§ duyarsanÄ±z receiver Ä± AndroidManifest.xml dosyanÄ±zda tanÄ±mlamalÄ±sÄ±nÄ±z.
Biz burda SMS dinlemesi yaparken Ã¶nlem amaÃ§lÄ± olarak CPU nun uyumasÄ±nÄ± Ã¶nlÃ¼yoruz.</description>
    </item>
    
    <item>
      <title>Android Internet Connection Receiver </title>
      <link>https://yazilim.aykutasil.com/post/android_internet_connection_receiver/</link>
      <pubDate>Wed, 11 Jan 2017 01:42:36 +0300</pubDate>
      
      <guid>https://yazilim.aykutasil.com/post/android_internet_connection_receiver/</guid>
      <description>UygulamanÄ±zÄ±n akÄ±ÅŸÄ±nÄ± internet kontrolÃ¼ yaparak yÃ¶netmeniz gerekebilir.
Bunun iÃ§in ilk olarak AndroidManifest.xml dosyasÄ±na receiver tanÄ±mÄ± yapmalÄ±sÄ±nÄ±z.
&amp;lt;receiver android:name=&amp;quot;.InternetConnectionReceiver&amp;quot;&amp;gt; &amp;lt;intent-filter&amp;gt; &amp;lt;action android:name=&amp;quot;android.net.conn.CONNECTIVITY_CHANGE&amp;quot; /&amp;gt; &amp;lt;/intent-filter&amp;gt; &amp;lt;/receiver&amp;gt;  InternetConnectionReceiver
public class InternetConnectionReceiver extends BroadcastReceiver { @Override public void onReceive(Context context, Intent intent) { if (CheckConnection(context)) { } } }  YukarÄ±da tanÄ±mlanmÄ±ÅŸ olan receiver, cihazÄ±n aÄŸ yapÄ±sÄ±nda herhangi bir deÄŸiÅŸiklik olduÄŸunda bunu yakalar. Ã–rneÄŸin wireless aÃ§Ä±kken kapattÄ±ÄŸÄ±nÄ±z da veya kapalÄ±yken aÃ§tÄ±ÄŸÄ±nÄ±z da bunu yakayabilirsiniz.</description>
    </item>
    
    <item>
      <title>Robolectric ile UnitTest YazÄ±mÄ±</title>
      <link>https://yazilim.aykutasil.com/post/android_robolectric/</link>
      <pubDate>Wed, 11 Jan 2017 00:31:52 +0300</pubDate>
      
      <guid>https://yazilim.aykutasil.com/post/android_robolectric/</guid>
      <description>Unit Test birÃ§ok yazÄ±Ä±lÄ±mcÄ± tarafÄ±ndan es geÃ§illen ama bir o kadar da Ã¶nemli ve yapÄ±lmasÄ± gerekli olan bir durumdur.
Proje bÃ¼yÃ¼dÃ¼kÃ§e ve ilerledikÃ§e teste duyulan ihtiyaÃ§ ta doÄŸru orantÄ±lÄ± olarak artmaktadÄ±r.
Unit Test neden yapÄ±lÄ±r sorusunun daha ayrÄ±ntÄ±lÄ± cevabÄ± iÃ§in unit test nedir nicin ve nasil yapilir bu yazÄ±yÄ± okuyabilirsiniz.
Android Studio da Robolectric kullanarak Unit Test YazÄ±mÄ±
AÅŸaÄŸÄ±daki adÄ±mlarÄ± sÄ±rasÄ± ile ve dÃ¼zgÃ¼n bir ÅŸekilde uygularsanÄ±z herhangi bir sorun Ã§Ä±kmadan testi Ã§alÄ±ÅŸtÄ±rabileceksiniz.</description>
    </item>
    
  </channel>
</rss>