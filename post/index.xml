<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Post-rsses on Software</title>
    <link>http://yazilim.aykutasil.com/post/index.xml</link>
    <description>Recent content in Post-rsses on Software</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>tr-tr</language>
    <lastBuildDate>Tue, 10 Jan 2017 23:20:12 +0300</lastBuildDate>
    <atom:link href="http://yazilim.aykutasil.com/post/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Local IIS Site Kurulumu</title>
      <link>http://yazilim.aykutasil.com/2017/01/local-iis-site-kurulumu/</link>
      <pubDate>Tue, 10 Jan 2017 23:20:12 +0300</pubDate>
      
      <guid>http://yazilim.aykutasil.com/2017/01/local-iis-site-kurulumu/</guid>
      <description>

&lt;h1 id=&#34;local-iis-site-kurulumu&#34;&gt;Local IIS Site Kurulumu&lt;/h1&gt;

&lt;p&gt;Uygulamanızı geliştirme sırasında Local IIS e sitenizi tanımlamanız gerekebilir. Sanki uzak sunucuda sitenizi custom domain ile host eder gibi (yani site kodlarınızı uzaktaki hostunuzda çalıştırır gibi) çalıştırabilirsiniz. İstediğiniz domain adresini belirtebilir, işlemlerinizi bu domaini kullanarak gerçekleştirebilirsiniz. Eğer bu yazıyı okuyor iseniz muhtemelen bunu yapmaya gerek duymuşsunuzdur.&lt;/p&gt;

&lt;p&gt;İlk olarak windows yüklü bilgisayarımızın başlat menüsüne tıklayarak  &lt;strong&gt;“Windows özellikleriniz Aç veya Kapat”&lt;/strong&gt; yazıp arama yapıyoruz.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://imgur.com/d5obWDA&#34;&gt;&lt;img src=&#34;http://i.imgur.com/d5obWDA.png&#34; title=&#34;source: imgur.com&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Yukarıda ki resimde görmüş olduğunuz gibi gerekli kutucukları işaretleyip kurulumu sağıyoruz.&lt;/p&gt;

&lt;h4 id=&#34;visual-studio-net-uygulamamızı-iis-e-tanıtma&#34;&gt;Visual Studio .Net Uygulamamızı IIS e Tanıtma&lt;/h4&gt;

&lt;p&gt;Visual Studio da uygulamızın ayarlar kısmına girerek yukarıdaki gibi yapılandırıyoruz.&lt;/p&gt;

&lt;p&gt;Servers ın alt kısmında görmüş olduğunuz Local IIS i seçmeyi unutmayalım. Bu seçenek Local imize IIS kurduktan sonra geldi.&lt;/p&gt;

&lt;p&gt;Şimdi sıra IIS yapılandırmasında.&lt;/p&gt;

&lt;p&gt;Bunun için yine başlat tuşuna basarak iis yazalım ve Internet Information Services (IIS) Yöneticisi ne girelim.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://imgur.com/e2lPp4E&#34;&gt;&lt;img src=&#34;http://i.imgur.com/e2lPp4E.png&#34; title=&#34;source: imgur.com&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Siteler e sağ tıklayarak Web Sitesi Ekle diyelim.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://imgur.com/UuDqEXb&#34;&gt;&lt;img src=&#34;http://i.imgur.com/UuDqEXb.png&#34; title=&#34;source: imgur.com&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Aşağıdaki gibi gerekli yerleri dolduralım.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Site adı :&lt;/strong&gt; Herhangi bir isim girebiliriz.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Fiziksel Yol :&lt;/strong&gt;  uygulamamızın kodlarının bulunduğu klasörü göstermeliyiz.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Not&lt;/strong&gt; : Web.Config dosyasının bulunduğu klasörün adresi gösterilmelidir.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ana bilgisayar adı :&lt;/strong&gt; Visual Studio da girdiğimiz adresin aynısını girmeliyiz.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://imgur.com/SQwIO0c&#34;&gt;&lt;img src=&#34;http://i.imgur.com/SQwIO0c.png&#34; title=&#34;source: imgur.com&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&#34;host-dosyası-yapılandırması&#34;&gt;Host dosyası yapılandırması&lt;/h4&gt;

&lt;p&gt;IIS e kaydetmiş olduğumuz domain adresini Windows a söylemeliyiz.&lt;/p&gt;

&lt;p&gt;Bunun için &lt;strong&gt;Windows/System32/drivers/etc&lt;/strong&gt; klasörünün içinde bulunan Host dosyasını  açarak adresimizi eklemeliyiz.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Not :&lt;/strong&gt; Host dosyasını masaüstünüze kopyalayın. Gerekli düzenlemeleri yaptıktan sonra dosyayı kopyalayıp tekrar etc klasörünün içine yapıştırın.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://imgur.com/ABzsBY9&#34;&gt;&lt;img src=&#34;http://i.imgur.com/ABzsBY9.png&#34; title=&#34;source: imgur.com&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Aşağıdaki resimdeki gibi adresimizi ekleyip kaydediyoruz.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://imgur.com/BGUmzda&#34;&gt;&lt;img src=&#34;http://i.imgur.com/BGUmzda.png&#34; title=&#34;source: imgur.com&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Artık Visual Studio muzda uygulamızı derleyebilir ve belirlediğimiz domainden erişim sağlayabiliriz.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>TSQL NULLIF Fonksiyonu Nedir ve Nasil Kullanilir</title>
      <link>http://yazilim.aykutasil.com/2017/01/tsql-nullif-fonksiyonu-nedir-ve-nasil-kullanilir/</link>
      <pubDate>Tue, 10 Jan 2017 23:08:34 +0300</pubDate>
      
      <guid>http://yazilim.aykutasil.com/2017/01/tsql-nullif-fonksiyonu-nedir-ve-nasil-kullanilir/</guid>
      <description>

&lt;h2 id=&#34;tsql-nullif-fonksiyonu&#34;&gt;TSQL NULLIF fonksiyonu&lt;/h2&gt;

&lt;p&gt;NULLIF fonksiyonu verilen iki parametre birbirine esit ise NULL deger döndürür eger degerleri fakli iki parametre verilirse sonuç olarak birinci parametrenin degerini döndürür.&lt;/p&gt;

&lt;p&gt;Kullanimi ve anlamasi kolay bir fonksiyon oldugu için basit bir örnekle anlatmaya çalisalim.&lt;/p&gt;

&lt;p&gt;Ilk olarak kullanacagimiz geçici tabloyu asagidaki gibi çalistirip içine insert komutu ile veri kaydedelim.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;CREATE TABLE #Urun (
UrunID TINYINT,
ListeFiyati DECIMAL NULL); 

GO

INSERT #Urun VALUES(1,100);
INSERT #Urun VALUES(2,NULL);
INSERT #Urun VALUES(3,0);
INSERT #Urun VALUES(7,250);
INSERT #Urun VALUES(9,458);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ListeFiyati kolonuna göre count yaparsak sonuç olarak 4 dönecegini görürsünüz, çünkü UrunID’si 2 olan ürünün liste fiyati girilmemistir. Count fonksiyonu null degerleri saymayacagi için 5 degil 4 degerini döndürür. Count(*) veya count(UrunID) yazarsaniz ID kolonu hiç null olmadigi için 5 degerini görürsünüz.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;select count(*) from #Urun
--sonuç : 5

select count(UrunID) from #Urun
--sonuç : 5

select count(ListeFiyati) from #Urun
--sonuç 4
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Simdi gelelim NULLIF fonksiyonuna. Liste fiyati 0 olarak girilen ürünlerin sayiya dahil etmek istemiyorsak, Liste fiyati 0 olanlari NULL ‘a çevirerek count islemini yapabiliriz.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;select NULLIF(ListeFiyati,0) from #Urun
/*
Liste Fiyati 0 olanlari NULL yap.
Sonuç:
100
NULL
NULL
250
458
*/

--Liste Fiyati 0 olanlar hariç sayiyi bulmak istiyorsak. (count fonksiyonunun NULL degerleri saymadigini unutmayalim)
select count(NULLIF(ListeFiyati,0)) from #Urun
--sonuç : 3.
--Çünkü bir ürüne ait liste fiyati 0 di. Onu NULL’ a degistirdik ve ----sayisini getirdik.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;http://www.yazilimmutfagi.com/10170/veritabani/sql-server/tsql-nullif-fonksiyonu-nedir-ve-nasil-kullanilir.aspx&#34;&gt;Kaynak&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Android Spinner Text Güncelleme</title>
      <link>http://yazilim.aykutasil.com/2017/01/android-spinner-text-g%C3%BCncelleme/</link>
      <pubDate>Tue, 10 Jan 2017 23:00:03 +0300</pubDate>
      
      <guid>http://yazilim.aykutasil.com/2017/01/android-spinner-text-g%C3%BCncelleme/</guid>
      <description>

&lt;h2 id=&#34;dinamik-olarak-spinner-text-güncelleme&#34;&gt;Dinamik Olarak Spinner Text Güncelleme&lt;/h2&gt;

&lt;p&gt;Android de Spinner yapısı açılır menü (dropdown) olarak kullanlan kullanışlı bir componenttir.&lt;/p&gt;

&lt;p&gt;Farklı ihtiyaçlarınız doğrultusunda Spinner ınızın elemanlarının değerini değiştirmek isteyebilirsiniz.&lt;/p&gt;

&lt;p&gt;Örneğin bir ListView iniz var.Ve içerisinde aynı kategoriden ama değişik durumlara sahip itemlar var ve siz bu itemları durumuna göre gruplandırıp sayısını Spinner da göstermek istiyorsunuz. Bunun için aşağıda belirtecek olduğum yapıyı kullanabilirsiniz.&lt;/p&gt;

&lt;p&gt;Öncellikle String.xml dosyasına Spinner ımızda göstereceğimiz elemanları tanımlıyoruz.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;String.xml&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;string name=&amp;quot;pazartesi&amp;quot;&amp;gt;Pazartesi&amp;lt;/string&amp;gt;
&amp;lt;string name=&amp;quot;sali&amp;quot;&amp;gt;Salı&amp;lt;/string&amp;gt;
&amp;lt;string name=&amp;quot;carsamba&amp;quot;&amp;gt;Çarşamba&amp;lt;/string&amp;gt;
&amp;lt;string name=&amp;quot;persembe&amp;quot;&amp;gt;Perşembe&amp;lt;/string&amp;gt;
&amp;lt;string name=&amp;quot;cuma&amp;quot;&amp;gt;Cuma&amp;lt;/string&amp;gt;
&amp;lt;string name=&amp;quot;cumartesi&amp;quot;&amp;gt;Cumartesi&amp;lt;/string&amp;gt;
&amp;lt;string name=&amp;quot;pazar&amp;quot;&amp;gt;Pazar&amp;lt;/string&amp;gt;


&amp;lt;string-array name=&amp;quot;array_gonderi_list_haftalik&amp;quot;&amp;gt;
    &amp;lt;item&amp;gt;@string/pazartesi&amp;lt;/item&amp;gt;
    &amp;lt;item&amp;gt;@string/sali&amp;lt;/item&amp;gt;
    &amp;lt;item&amp;gt;@string/carsamba&amp;lt;/item&amp;gt;
    &amp;lt;item&amp;gt;@string/persembe&amp;lt;/item&amp;gt;
    &amp;lt;item&amp;gt;@string/cuma&amp;lt;/item&amp;gt;
    &amp;lt;item&amp;gt;@string/cumartesi&amp;lt;/item&amp;gt;
    &amp;lt;item&amp;gt;@string/pazar&amp;lt;/item&amp;gt;
&amp;lt;/string-array&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;SpinnerHelper.java&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;public static String[] getChangedSpinnerItemText(Context context) {
    String[] originalList = context.getResources().getStringArray(R.array.array_gonderi_list_haftalik);

    Resources resources = context.getResources();
    for (int a = 0; a &amp;lt; originalList.length; a++) {
        int count = 0;
        if (originalList[a].equals(resources.getString(R.string.pazartesi))) {
            count = 2;
            originalList[a] += &amp;quot; ( &amp;quot; + count + &amp;quot; )&amp;quot;;
        } else if (originalList[a].equals(resources.getString(R.string.sali))) {
            count = 4;
            originalList[a] += &amp;quot; ( &amp;quot; + count + &amp;quot; )&amp;quot;;
        } else if (originalList[a].equals(resources.getString(R.string.carsamba))) {
            count = 7;
            originalList[a] += &amp;quot; ( &amp;quot; + count + &amp;quot; )&amp;quot;;
        } else {
            count = 8
            originalList[a] += &amp;quot; ( &amp;quot; + count + &amp;quot; )&amp;quot;;
        }
    }
    return originalList;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Daha sonra spinnerımızı tanımladığımız yere giderek spinnerımızı yapılandırıyoruz.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;FragmentX.java&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;public void setSpinnerNavToolbar() {

 // Guncelledikten sonra spinner görünümü örneği
 // Pazartesi ( 2 )
 // Salı ( 4 )
 // ... 
 
 // Spinner itemlarının güncellenmiş halini barındıran listeyi getiriyoruz.
 String[] changedList = getChangedSpinnerItemText(context);

 // Spinner adapterımıza eklemeler yapılmış String Arrayi veriyoruz.
 ArrayAdapter&amp;lt;CharSequence&amp;gt; adapter = new ArrayAdapter&amp;lt;CharSequence&amp;gt;(mContext, R.layout.spinner_nav_item_layout,changedList);
 Spinner spinner = (Spinner) findViewById(R.id.spinner_nav);
 spiner.setAdapter(adapter);
 spinner.setVisibility(NavigationView.VISIBLE);
 spinner.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
 @Override
 public void onItemSelected(AdapterView&amp;lt;?&amp;gt; parent, View view, int position, long id) {

 // Original Liste elemanlarımızı getiriyoruz 
 String[] originalList = context.getResources().getStringArray(R.array.array_gonderi_list_haftalik);
 
 // Original Liste elemanını baz alarak işlem yapmak 
 // Bu sayede Pazartesi , Salı gibi değerleri alıyoruz. Değiştirilmiş (güncellenmiş) değerleri sadece görünüm için kullanıyoruz.
 String secilendeger = originalList[position];


 // Pazartesi seçildiğinde yapmak istediğimiz işlemleri burada belirtebiliriz.
 if (secilendeger.equals(getResources().getString(R.string.pazartesi))) {

 } 
 // Salı seçildiğinde yapmak istediğimiz işlemleri burada belirtebiliriz.
 else if(secilendeger.equals(getResources().getString(R.string.pazartesi)))
 {

 }
 }

 @DebugLog
 @Override
 public void onNothingSelected(AdapterView&amp;lt;?&amp;gt; parent) {

 }
 });
}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Runnable() &amp; Callable()</title>
      <link>http://yazilim.aykutasil.com/2017/01/runnable--callable/</link>
      <pubDate>Tue, 10 Jan 2017 22:44:52 +0300</pubDate>
      
      <guid>http://yazilim.aykutasil.com/2017/01/runnable--callable/</guid>
      <description>

&lt;h1 id=&#34;runnable-callable&#34;&gt;Runnable() &amp;amp; Callable()&lt;/h1&gt;

&lt;p&gt;Ayrıntılı açıklama için &lt;a href=&#34;http://www.java67.com/2013/01/difference-between-callable-and-runnable-java.html&#34;&gt;bu siteyi&lt;/a&gt; kullanabilirsiniz.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>PendingIntent Flags</title>
      <link>http://yazilim.aykutasil.com/2017/01/pendingintent-flags/</link>
      <pubDate>Mon, 02 Jan 2017 14:35:49 +0300</pubDate>
      
      <guid>http://yazilim.aykutasil.com/2017/01/pendingintent-flags/</guid>
      <description>&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;                        PendingIntent resultPendingIntent = PendingIntent.getActivity(
                                getApplicationContext(),
                                100,
                                intent,
                                PendingIntent.FLAG_CANCEL_CURRENT);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;PendingIntent ler Android uygulama geliştirilmesi sırasında birçok yerde karşımıza çıkabilir.&lt;/p&gt;

&lt;p&gt;Özetle PendingIntent kullanılarak asenkron işlem başlatılımı yapılır.&lt;/p&gt;

&lt;p&gt;En genel kullanım alanlarından bir tanesi de Notification lar iledir.&lt;/p&gt;

&lt;p&gt;Kullanıcı, hazırlamış olduğumuz notification a tıkladığında alacak olduğu tepki nasıl olmalı? sorusuna cevap vermek için PendingIntent imizin flag parametresini uygun şekilde düzenlemeliyiz.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;Not:&lt;/strong&gt; PendingIntent düzenlenirken requestCode aynı olmalıdır. Eğer her notif için farklı requestCode verirsek her biri farklı notif gibi davranır. Yani verdiğimiz flag in bir değeri kalmaz.
Uygulamanın akışına göre kimi zaman da requestCode u farklı vermemiz gerekebilir.&lt;/p&gt;

&lt;p&gt;Hangi amaçla kullanacağınız tabi ki size ve uygulamanıza kalmış. ;)&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;PendingIntent.FLAG_CANCEL_CURRENT&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;FLAG_CANCEL_CURRENT&lt;/strong&gt; ile şunu söylüyoruz.
Arka arkaya birden fazla notification gelirse eğer, sen en son geleni dikkate al sadece. Diğerlerinin artık hiç bir önemi yok.
En son hariç diğer notificationlardan birine tıklandığında herhangi bir işlem yapma diyoruz.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;PendingIntent.FLAG_ONE_SHOT&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;FLAG_ONE_SHOT&lt;/strong&gt; ile şunu söylüyoruz.
Arka arkaya birden fazla notification gelirse eğer, sen sadece ilk geleni dikkate al. Diğer gelenlerin bi önemi yok.
İlk gelen notif hariç diğerlerinden birine tıklanırsa herhangi bir işlem yapma diyoruz.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;PendingIntent.FLAG_UPDATE_CURRENT&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;FLAG_UPDATE_CURRENT&lt;/strong&gt; ile şunu söylüyoruz.
Arka arkaya birden fazla notification gelirse eğer, sen en son geleni dikkate al sadece. Diğerleri önemli değil.
En son hariç diğer notification a tıkladığımızda en son gelen parametrelere göre işlem yap diyoruz.&lt;/p&gt;

&lt;hr /&gt;
</description>
    </item>
    
    <item>
      <title>Docker</title>
      <link>http://yazilim.aykutasil.com/2016/12/docker/</link>
      <pubDate>Sun, 25 Dec 2016 23:09:01 +0300</pubDate>
      
      <guid>http://yazilim.aykutasil.com/2016/12/docker/</guid>
      <description>

&lt;h2 id=&#34;docker&#34;&gt;DOCKER&lt;/h2&gt;

&lt;p&gt;Docker aldı başını gidiyor. Yeni bir devrim açıyor.&lt;/p&gt;

&lt;p&gt;E haliyle yazılım dünyası buna sessiz kalmamakla beraber bir çok Docker nedir? örnekleri vs. hazırlanıyor.&lt;/p&gt;

&lt;p&gt;Bu nedenle biz Docker nedir?  tanımlamasından daha çok hızlı ilerlemeler şeklinde ufak uygulamalar geliştiricez. Bende bu yazı serisiyle paralel şekilde öğrenimimi sağlayacağımı belirtmek isterim ! 🙂&lt;/p&gt;

&lt;p&gt;Başlıyoruz..&lt;/p&gt;

&lt;p&gt;İlk olarak makinemize Docker ı kuralım.&lt;/p&gt;

&lt;p&gt;Mac: &lt;a href=&#34;https://docs.docker.com/docker-for-mac/&#34;&gt;https://docs.docker.com/docker-for-mac/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Windows : &lt;a href=&#34;https://docs.docker.com/docker-for-windows/&#34;&gt;https://docs.docker.com/docker-for-windows/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;İndirip kurulumu sağladıktan sonra terminali açarak&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-Bash&#34;&gt;&amp;gt; docker run hello-world
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;komutunu çalıştırıyoruz ve Docker a merhaba diyoruz.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Cannot connect to the Docker daemon. Is the docker daemon running on this host?
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Yukarıda ki mesajı alanlar için;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker-machine start # start virtual machine for docker
$ docker-machine env  # it&#39;s helps to get environment variables
$ eval &amp;quot;$(docker-machine env default)&amp;quot; #set environment variables
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Komutlarını çalıştırarak Docker ın sistemimize tanıtıyoruz ve sonrasında tekrar &lt;strong&gt;docker run Hello-World&lt;/strong&gt; komutunu çalıştırıyoruz.&lt;/p&gt;

&lt;p&gt;ekran-resmi-2016-11-21-18-07-52&lt;/p&gt;

&lt;p&gt;Hadi bakalım hayırlı olsun.. 😉&lt;/p&gt;

&lt;p&gt;Ek Kaynak için : &lt;a href=&#34;http://www.enterprisecoding.com/post/yeni-baslayanlar-icin-docker&#34;&gt;http://www.enterprisecoding.com/post/yeni-baslayanlar-icin-docker&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Docker Komutları</title>
      <link>http://yazilim.aykutasil.com/2016/12/docker-komutlar%C4%B1/</link>
      <pubDate>Sun, 25 Dec 2016 22:49:17 +0300</pubDate>
      
      <guid>http://yazilim.aykutasil.com/2016/12/docker-komutlar%C4%B1/</guid>
      <description>

&lt;h2 id=&#34;docker-komutları-ve-açıklamaları&#34;&gt;Docker Komutları ve Açıklamaları&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;&amp;gt; docker images
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Docker hostuna yüklü olan image leri gösterir.&lt;/p&gt;

&lt;hr /&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;&amp;gt; docker ps
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Docker hostunda yüklü olan imagelerle inşa edilmiş olan container ları listeler.&lt;/p&gt;

&lt;hr /&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;&amp;gt; docker run hello-world
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;İlk olarak Local de (bilgisayarımızda) hello-world isminde bir image var mı kontrol eder. Eğer varsa direkt olarak çalıştırır.&lt;/p&gt;

&lt;p&gt;Local de verilen isimde bir image bulamaz ise cloud da arama yapar, bulur, local e indirir ve ardından çalıştırır.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;&amp;gt; docker pull hello-world
&amp;gt; docker run hello-world
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;komutlarının birleşimidir.&lt;/p&gt;

&lt;hr /&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;&amp;gt; docker run -p 8080:80 nginx
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;nginx image local de arar, eğer bulamazsa indirir ve local imize kurar.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;-p&lt;/strong&gt; parametresi kendisinden sonra verilen parametredeki portlar arasında port forwarding yani port yönlendirme yapar.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;-p&lt;/strong&gt; = host umuzdaki 8080 portunu container ımızda ki 80 portuna yönlendirme işlemini sağlıyoruz&lt;/p&gt;

&lt;hr /&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;&amp;gt; docker exec -it &amp;lt;container_id&amp;gt; /bin/bash
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;komutu ile Container’a bir Bash Shell açabiliriz. -i interaktif terminali -t ise terminalin attach olmasını istediğimizi belirtir. &lt;strong&gt;docker exec -it /bin/bash&lt;/strong&gt; komutunu çalıştırın (Container ID’nin sadece baştan birkaç harfini vermemizin yettiğine -çakışma olmadığı müddetçe- dikkat edin).&lt;/p&gt;

&lt;p&gt;Oluşturmuş olduğumuz container ın içine girerek komutları çalıştırmamıza olanak sağlar.&lt;/p&gt;

&lt;p&gt;Container ın içindeyken;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;&amp;gt; ps -ef
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;komutu ile container ın çalıştırmış olduğu tüm process leri listeleyebiliriz.&lt;/p&gt;

&lt;h2 id=&#34;komutlar&#34;&gt;Komutlar&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;docker images&lt;/code&gt; Lokal registery’de mevcut bulunan Image’ları listeler&lt;/p&gt;

&lt;p&gt;&lt;code&gt;docker ps&lt;/code&gt; Halihazırda çalışmakta olan Container’ları listeler&lt;/p&gt;

&lt;p&gt;&lt;code&gt;docker ps -a&lt;/code&gt;  Docker Daemon üzerindeki bütün Container’ları listeler&lt;/p&gt;

&lt;p&gt;&lt;code&gt;docker ps -aq&lt;/code&gt; Docker Daemon üzerindeki bütün Container’ların ID’lerini listeler&lt;/p&gt;

&lt;p&gt;&lt;code&gt;docker pull &amp;lt;repository_name&amp;gt;/&amp;lt;image_name&amp;gt;:&amp;lt;image_tag&amp;gt;&lt;/code&gt;    Belirtilen Image’ı lokal registry’ye indirir. Örnek: docker pull gsengun/jmeter3.0:1.7&lt;/p&gt;

&lt;p&gt;&lt;code&gt;docker top &amp;lt;container_id&amp;gt;&lt;/code&gt; İlgili Container’da top komutunu çalıştırarak çıktısını gösterir&lt;/p&gt;

&lt;p&gt;&lt;code&gt;docker run -it &amp;lt;image_id|image_name&amp;gt;&lt;/code&gt; CMD  Verilen Image’dan terminal’i attach ederek bir Container oluşturur&lt;/p&gt;

&lt;p&gt;&lt;code&gt;docker pause &amp;lt;container_id&amp;gt;&lt;/code&gt;   İlgili Container’ı duraklatır&lt;/p&gt;

&lt;p&gt;&lt;code&gt;docker unpause &amp;lt;container_id&amp;gt;&lt;/code&gt; İlgili Container pause ile duraklatılmış ise çalışmasına devam ettirilir&lt;/p&gt;

&lt;p&gt;&lt;code&gt;docker stop &amp;lt;container_id&amp;gt;&lt;/code&gt;    İlgili Container’ı durdurur&lt;/p&gt;

&lt;p&gt;&lt;code&gt;docker start &amp;lt;container_id&amp;gt;&lt;/code&gt;   İlgili Container’ı durdurulmuşsa tekrar başlatır&lt;/p&gt;

&lt;p&gt;&lt;code&gt;docker rm &amp;lt;container_id&amp;gt;&lt;/code&gt;  İlgili Container’ı kaldırır fakat ilişkili Volume’lara dokunmaz&lt;/p&gt;

&lt;p&gt;&lt;code&gt;docker rm -v &amp;lt;container_id&amp;gt;&lt;/code&gt;   İlgili Container’ı ilişkili Volume’lar ile birlikte kaldırır&lt;/p&gt;

&lt;p&gt;&lt;code&gt;docker rm -f &amp;lt;container_id&amp;gt;&lt;/code&gt;   İlgili Container’ı zorlayarak kaldırır. Çalışan bir Container ancak -f ile kaldırılabilir&lt;/p&gt;

&lt;p&gt;&lt;code&gt;docker rmi &amp;lt;image_id|image_name&amp;gt;&lt;/code&gt;  İlgili Image’ı siler&lt;/p&gt;

&lt;p&gt;&lt;code&gt;docker rmi -f &amp;lt;image_id|image_name&amp;gt;&lt;/code&gt;   İlgili Image’ı zorlayarak kaldırır, başka isimlerle Tag’lenmiş Image’lar -f ile kaldırılabilir&lt;/p&gt;

&lt;p&gt;&lt;code&gt;docker info&lt;/code&gt;   Docker Daemon’la ilgili özet bilgiler verir&lt;/p&gt;

&lt;p&gt;&lt;code&gt;docker inspect &amp;lt;container_id&amp;gt;&lt;/code&gt; İlgili Container’la ilgili detaylı bilgiler verir&lt;/p&gt;

&lt;p&gt;&lt;code&gt;docker inspect &amp;lt;image_id|image_name&amp;gt;&lt;/code&gt;  İlgili Image’la ilgili detaylı bilgiler verir&lt;/p&gt;

&lt;p&gt;&lt;code&gt;docker rm $(docker ps -aq)&lt;/code&gt;    Bütün Container’ları kaldırır&lt;/p&gt;

&lt;p&gt;&lt;code&gt;docker stop $(docker ps -aq)&lt;/code&gt;  Çalışan bütün Container’ları kaldırır&lt;/p&gt;

&lt;p&gt;&lt;code&gt;docker rmi $(docker images -aq)&lt;/code&gt;   Bütün Image’ları kaldırır&lt;/p&gt;

&lt;p&gt;&lt;code&gt;docker images -q -f dangling=true&lt;/code&gt; Dangling (taglenmemiş ve bir Container ile ilişkilendirilmemiş) Image’ları listeler&lt;/p&gt;

&lt;p&gt;&lt;code&gt;docker rmi $(docker images -q -f dangling=true)&lt;/code&gt;   Dangling Image’ları kaldırır&lt;/p&gt;

&lt;p&gt;&lt;code&gt;docker volume ls -f dangling=true&lt;/code&gt; Dangling Volume’ları listeler&lt;/p&gt;

&lt;p&gt;&lt;code&gt;docker volume rm $(docker volume ls -f dangling=true -q)&lt;/code&gt;  Danling Volume’ları kaldırır&lt;/p&gt;

&lt;p&gt;&lt;code&gt;docker logs &amp;lt;container_id&amp;gt;&lt;/code&gt;    İlgili Container’ın terminalinde o ana kadar oluşan çıktıyı gösterir&lt;/p&gt;

&lt;p&gt;&lt;code&gt;docker logs -f &amp;lt;container_id&amp;gt;&lt;/code&gt; İlgili Container’ın terminalinde o ana kadar oluşan çıktıyı gösterir ve -f follow parametresi ile o andan sonra oluşan logları da göstermeye devam eder&lt;/p&gt;

&lt;p&gt;&lt;code&gt;docker exec &amp;lt;container_id&amp;gt; &amp;lt;command&amp;gt;&lt;/code&gt;  Çalışan bir Container içinde bir komut koşturmak için kullanılır&lt;/p&gt;

&lt;p&gt;&lt;code&gt;docker exec -it &amp;lt;container_id&amp;gt; /bin/bash&lt;/code&gt;  Çalışan bir Container içinde terminal açmak için kullanılır. İlgili Image’da /bin/bash bulunduğu varsayımı ile&lt;/p&gt;

&lt;p&gt;&lt;code&gt;docker attach &amp;lt;container_id&amp;gt;&lt;/code&gt;  Önceden detached modda -d başlatılan bir Container’a attach olmak için kullanılır&lt;/p&gt;

&lt;p&gt;Ek Kaynak : &lt;a href=&#34;http://www.gokhansengun.com/docker-nedir-nasil-calisir-nerede-kullanilir/&#34;&gt;http://www.gokhansengun.com/docker-nedir-nasil-calisir-nerede-kullanilir/&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Docker Container Install nano</title>
      <link>http://yazilim.aykutasil.com/2016/12/docker-container-install-nano/</link>
      <pubDate>Sun, 25 Dec 2016 03:51:49 +0300</pubDate>
      
      <guid>http://yazilim.aykutasil.com/2016/12/docker-container-install-nano/</guid>
      <description>&lt;p&gt;Docker ile ayağa kaldırmış olduğunuz bir container olduğunu varsayalım ve bu docker container a erişerek komut satırı çalıştırmanız gerekiyor.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://docs.docker.com/engine/reference/commandline/exec/&#34;&gt;https://docs.docker.com/engine/reference/commandline/exec/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Yukarıdaki linki takip ederek nasıl komut çalıştıracağınızı öğrenebilirsiniz.
Ya da &lt;em&gt;Kitematic&lt;/em&gt; gibi bir uygulama yüklü ise bu uygulamayı açarak ve çalışan image e tıklayarak exe butonuna basmamız yeterli olucaktır.&lt;/p&gt;

&lt;p&gt;Bu sayfada anlatmak istediğim şey tüm bunları yaptınız ve container ın içindeyken bir dosya oluşturdunuz.
Ve bu dosyanın içeriğini düzenlemeniz gerekmekte.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Nasıl yaparız ?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Container ın içerisinde olduğumuzdan bir görsel arayüz yok. &lt;code&gt;open .&lt;/code&gt; fln diyerek dosya yoluna erişim yapamayız.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;nano&lt;/code&gt; gibi birşeye ihtiyacımız var ki bash penceresi üzerinden değişiklik yapabilelim.&lt;/p&gt;

&lt;p&gt;Öncelikle&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# apt-get update
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;komutunu çalıştırarak linux paketlerini güncelliyoruz.&lt;/p&gt;

&lt;p&gt;Daha sonra&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# export TERM=xterm
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;komutunu çalıştırıyoruz ve ardından&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# apt-get install nano
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;komutu ile nano yu container ımıza yüklüyoruz.&lt;/p&gt;

&lt;p&gt;Artık istediğimiz dosyanın path ine ulaşarak ve&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# nano dosya_adi.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;diyerek command penceresi üzerindeyken düzenleme yapabiliriz.&lt;/p&gt;

&lt;p&gt;Kolay gelsin gençler..&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Android ile WebView Etkileşimi</title>
      <link>http://yazilim.aykutasil.com/2016/12/android-ile-webview-etkile%C5%9Fimi/</link>
      <pubDate>Sun, 25 Dec 2016 00:28:10 +0300</pubDate>
      
      <guid>http://yazilim.aykutasil.com/2016/12/android-ile-webview-etkile%C5%9Fimi/</guid>
      <description>

&lt;p&gt;Kısa Hikaye : Üstünde çalışmakta olduğum bir projede kredi kartı ile ödeme yapısı kurmam gerekti. Kısaca projenin yapısından bahsedecek olursak&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Backend : .Net&lt;/li&gt;
&lt;li&gt;Client : Android (Java)&lt;/li&gt;
&lt;li&gt;Ödeme altyapısı : İyzico&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Client tarafında rest isteğiyle tüm işlemlerimizi backend tarafında yapıyoruz. Ödeme yapımızı da bu doğrultuda geliştirdik.&lt;/p&gt;

&lt;p&gt;Problem : 3DS ile ödeme almaya çalıştığımızda malumunuz işin içerisine bankanın bize telefonumuza gelen şifreyi girmemiz için göndermiş olduğu web sayfası vs. giriyor. Bu durumda client ile web sayfası iletişimini de bir şekilde sağlamamız gerekiyor.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Yukarıda ki hikayeyi anlatarak kafanızda bir problemi canlandırmaya çalıştım. Benzer bir çok durum ile karşı karşıya kalabilirsiniz.&lt;/p&gt;

&lt;p&gt;Ulan ben webview de ki butonu vs nasıl android tarafında kontrol edicem ? gibi akılda deli sorular oluşabilir..&lt;/p&gt;

&lt;p&gt;Tabiri caiz ise : PhoneGap tarzı bişiler.. 🙂 😉&lt;/p&gt;

&lt;p&gt;Neyse.&lt;/p&gt;

&lt;p&gt;Örnek ver hacı abi;&lt;/p&gt;

&lt;h2 id=&#34;layout-xml&#34;&gt;Layout.xml&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot;?&amp;gt;
&amp;lt;LinearLayout xmlns:android=&amp;quot;http://schemas.android.com/apk/res/android&amp;quot;
    android:layout_width=&amp;quot;match_parent&amp;quot;
    android:layout_height=&amp;quot;match_parent&amp;quot;
    android:orientation=&amp;quot;vertical&amp;quot;&amp;gt;

    &amp;lt;WebView
        android:id=&amp;quot;@+id/WebView&amp;quot;
        android:layout_width=&amp;quot;match_parent&amp;quot;
        android:layout_height=&amp;quot;match_parent&amp;quot; /&amp;gt;

&amp;lt;/LinearLayout&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;activity-fragment&#34;&gt;Activity – Fragment&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;WebView webView = (WebView) findViewById(R.id.WebView);

WebSettings settings = webView.getSettings();
settings.setDefaultTextEncodingName(&amp;quot;utf-8&amp;quot;);
settings.setJavaScriptEnabled(true);

webView.setWebViewClient(new MyWebViewClient());
webView.addJavascriptInterface(new MyWebViewJavascriptInterface(mContext, webView, callbackDialog), &amp;quot;Android&amp;quot;); // Buraya dikkat
webView.loadDataWithBaseURL(null, response.getData().getThreeDSHtmlContent(), &amp;quot;text/html&amp;quot;, &amp;quot;utf-8&amp;quot;, null); // elimizde bulunan bir html dökümanı webview e basıyoruz. URL de verebilirsin istersen
webView.addJavascriptInterface(new MyWebViewJavascriptInterface(mContext, webView, callbackDialog), &amp;quot;Android&amp;quot;);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Yukarıda ki “Android” kısmına istediğimiz ismi verebiliriz. WebView yapısı, burada belirtmiş olduğumuz isim ile sayfaya yüklenen içeriğe bir eklenti yapıyor, yani bir instance alıyor. Biz bu instance ı kullanarak iletişimimizi sağlıyoruz.&lt;/p&gt;

&lt;p&gt;Az sabır. Nasıl olduğunu görüceksin..&lt;/p&gt;

&lt;h2 id=&#34;mywebviewclient&#34;&gt;MyWebViewClient&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;class MyWebViewClient extends WebViewClient {

    @Override
    public void onPageFinished(WebView view, String url) {
        super.onPageFinished(view, url);
        //view.loadUrl(&amp;quot;javascript:window.Android.processHTML(&#39;&amp;lt;html&amp;gt;&#39;+document.getElementsByTagName(&#39;html&#39;)[0].innerHTML+&#39;&amp;lt;/html&amp;gt;&#39;);&amp;quot;);
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Bu blok ne yapıyor ?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;window.Android.processHTML&lt;/strong&gt; de ki Android bizim yukarıda belirtmiş olduğumuz aracı.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;processHtml&lt;/strong&gt; ise aşağıda tanımlıcak olduğumuz fonksiyon.&lt;/p&gt;

&lt;p&gt;Diğer kısımlar javascript fonksiyonu zaten. Yani sayfada ki ilk html tag ını bularak içindeki html kodu al.&lt;/p&gt;

&lt;p&gt;Aşağıda ki processHtml e bakarsan görüceksin ki htmlContent parametresi bekliyor.Biz de bu parametreye sayfa içeriğinin html kodunu gönderiyoruz. Almış olduğun bu html içeriğiyle ne yaparsın sana kalmış.&lt;/p&gt;

&lt;h2 id=&#34;mywebviewjavascriptinterface&#34;&gt;MyWebViewJavascriptInterface&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;class MyWebViewJavascriptInterface {

    Context mContext;
    WebView mWebView;

    MyWebViewJavascriptInterface(Context c, WebView webView) {
        this.mContext = c;
        this.mWebView = webView;
    }

    @JavascriptInterface
    public void processHTML(String htmlContent) {
        // işlem
        // Toast ile html içeriğini gösterebiliriz       
    }

    @JavascriptInterface
    public void islemeDevamEt() {
       // işlem
    }

    @JavascriptInterface
    public void pencereyiKapat() {
        // işlem
        // dialog.dismiss();
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;WebView miz ile Android native kodumuzun iletişimini bu sınıf sağlıyor.&lt;/p&gt;

&lt;p&gt;Aşşağıda ki  kod ile bunu söylüyoruz.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;webView.addJavascriptInterface(new MyWebViewJavascriptInterface(mContext, webView), &amp;ldquo;Android&amp;rdquo;);&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Not&lt;/em&gt;&lt;/strong&gt; : Android 4.2 den sonra &lt;strong&gt;@JavascriptInterface&lt;/strong&gt; annotations ını eklememiz gerekmekte. Yoksa nolur ? Çalışmaz 😉&lt;/p&gt;

&lt;h2 id=&#34;custom-html-content&#34;&gt;Custom Html Content&lt;/h2&gt;

&lt;p&gt;WebView de gösterdiğimiz html contentinde bir buton ekleyelim.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt; &amp;lt;button class=&amp;quot;btn btn-danger&amp;quot; onclick=&amp;quot;PencereyiKapat()&amp;quot;&amp;gt;Pencereyi Kapat&amp;lt;/button&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;WebView içinde ki bu butona basıldığını Android anlasın ve (WebView imizi Dialog içerisinde gösterildiğini varsayarak) dialog penceresini kapasın.&lt;/p&gt;

&lt;p&gt;Butonumuzun olduğu sayfaya  javascript kodumuzu ekliyoruz.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;&amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt;
  function PencereyiKapat() {
     Android.pencereyiKapat();
  }
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Yukarıda ki Android i hatırladınız dimi ? 🙂&lt;/p&gt;

&lt;p&gt;HTML sayfamız bu kadar.&lt;/p&gt;

&lt;p&gt;WebView içerisinde ki butona basıldığında javascript fonksiyonu çalışacak ve Android.pencereyiKapat() çalışacak. Yani native tarafta tanımlamış olduğumuz pencereyiKapat() fonksiyonu.&lt;/p&gt;

&lt;p&gt;Yukarıda ki yapıyı kullanarak WebView – Android Native etkileşimli yapı kurabilirsin.&lt;/p&gt;

&lt;p&gt;Her zaman ki gibi hayal gücüne ve projeye kalmış 😉&lt;/p&gt;

&lt;p&gt;Kalın sağlıcakla..&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>GcmNetworkManager Kullanımı</title>
      <link>http://yazilim.aykutasil.com/2016/12/gcmnetworkmanager-kullan%C4%B1m%C4%B1/</link>
      <pubDate>Fri, 23 Dec 2016 18:04:15 +0300</pubDate>
      
      <guid>http://yazilim.aykutasil.com/2016/12/gcmnetworkmanager-kullan%C4%B1m%C4%B1/</guid>
      <description>&lt;p&gt;GcmNetworkManager kullanarak Android de network tabanlı işlemlerinizi olabildiğince kontrollü bir şekide yapabilirsiniz.&lt;/p&gt;

&lt;p&gt;GcmNetworkManager ın kullanım alanı daha çok asenkron ve periodic network işlemlerinizi yapılandırmaktır.&lt;/p&gt;

&lt;p&gt;Tek sefer çalışacak veya Periodic olarak çalışacak işlemleriniz için 2 tip belirlenmiştir.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;OneoffTask&lt;/li&gt;
&lt;li&gt;PeriodicTask&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;OneoffTask Kullanımı&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;OneoffTask oneoff = new OneoffTask.Builder()
        // Uygulamanızı kapatsanız bile tekrar açtığınız da network işleminiz işleme konulur.
        // Yani isteğinizin kalıcı olup olmamasını bu parametre ile ayarlayabilirsiniz.
        .setPersisted(true)
        // Belirtilen network işlemlerinin çalışacağı service i belirtir.
        .setService(MyGcmTaskService.class)
        // İşleminiz için tag belirleyebilirsiniz.
        // Aynı tag ile yeni bir istek yaptığınız da &#39;.setUpdateCurrent(true)&#39; olarak belirlenmiş ise isteğinizi yeni istek ile günceller. Yani eski isteğiniz geçersiz olacaktır. &#39;setUpdateCurrent(false)&#39; olarak belirlenir ise aynı tag ile yeni istekte bulunsanız bile her iki isteğiniz de çalışacaktır. 
        .setTag(tag)
        // Network isteğinizin çalışma zamanı parametrelerini belirler
        .setExecutionWindow(0, 10)
        // İşleminiz için internet gerekliliği veya wireless gerekliliği parametrelerini belirler
        .setRequiredNetwork(required_network_state)
        // İşleminiz için cihazın şarja bağlı olup olmaması gerekliliğini belirler
        .setRequiresCharging(false)
        // Aynı tag ile yeni istek yapıldığı takdirde güncellenip güncellenmemesi durumunu belirler
        .setUpdateCurrent(true)
        // Bundle ile işleminiz için gerekli parametreleri belirleyebilirsiniz
        .setExtras(bundle)
        // build eder
        .build();

GcmNetworkManager.getInstance(context).schedule(oneoff);
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;MyGcmTaskService&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;// Cihazınızı yeniden başlatma gibi durumlar da önceden belirlenmiş task lerinizin çalışmasını devam ettirmesini istiyorsanız
// burada tekrar belirlemelisiniz.
@Override
public void onInitializeTasks() {
    
}

// GcmNetworkManager ın kendi algoritması ile seçilen, tanımlamış olduğunuz istek bu kod bloğuna girecek.
@Override
public int onRunTask(TaskParams taskParams) {
    try {
        Bundle bundle = taskParams.getExtras();
        return SchedulerRandevuTask(bundle);        
    } catch (Exception e) {
        ErrorEvent errorEvent = new ErrorEvent();
        errorEvent.setErrorContent(e.getMessage());
        EventBus.getDefault().post(errorEvent);
        return GcmNetworkManager.RESULT_RESCHEDULE;
    }
}

private int SchedulerZiyaretTask(Bundle bundle) {
    try {
        // isteğimiz sırasında bundle olarak yüklemiş olduğumuz nesneyi burada yakalıyoruz
        String jsonModel = bundle.getString(Const.IZTOP_TASK_BUNDLE);
        ZiyaretRequest request = new Gson().fromJson(jsonModel, ZiyaretRequest.class);
        ZiyaretResponse ziyaretResponse = sendZiyaretProcess(request);
        switch (ziyaretResponse.getCode()) {
            case 0: {
                EventBus.getDefault().post(ziyaretResponse);                
                // işlemlerimiz başarılı bir şekilde gerçekleşmiş ise result değeri olarak RESULT_SUCCESS dönüyoruz.
                // GcmNetworkManager bu işlemi başarılı olduğu için listeden silecek ve tekrar çalıştırmayı denemicektir.
                return GcmNetworkManager.RESULT_SUCCESS;
            }
            default: {
                // işlemlerimiz başarısız olması durumunda ( burada sunucuya istekte bulunulmuş ve dönen değer 0 değil ise başarısız olarak belirlenmiştir )isteğin tekrar çalışması için result değeri olarak RESULT_RESCHEDULE dönüyoruz.
                return GcmNetworkManager.RESULT_RESCHEDULE;
            }
        }
    } catch (Exception e) {
        SuperHelper.CrashlyticsLog(e);
        e.printStackTrace();
        return GcmNetworkManager.RESULT_RESCHEDULE;
    }


}
private ZiyaretResponse sendZiyaretProcess(ZiyaretRequest request) {
    return ApiManager.getInstance(getApplicationContext()).Ziyaret(request);
}

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;ApiManager / Ziyaret&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;public ZiyaretResponse Ziyaret(ZiyaretRequest request) {
    try {
        RestClient restClient = RestClient.getInstance();
        Call&amp;lt;ZiyaretResponse&amp;gt; responseCall = restClient.getApiService().Ziyaret(request);
        ZiyaretResponse ziyaretResponse = responseCall.execute().body();
        return ziyaretResponse;
    } catch (Exception ex) {
        return null;
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Retrofit ApiService&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;@POST(&amp;quot;sunucu/ziyaret/api/adresi&amp;quot;)
Call&amp;lt;ZiyaretResponse&amp;gt; Ziyaret(@Body ZiyaretRequest ziyaretRequest);&amp;lt;/pre&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;
</description>
    </item>
    
  </channel>
</rss>