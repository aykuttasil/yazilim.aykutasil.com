<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Software</title>
    <link>http://yazilim.aykutasil.com/tags/software/index.xml</link>
    <description>Recent content on Software</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>tr-tr</language>
    <atom:link href="http://yazilim.aykutasil.com/tags/software/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>TCP/IP Nasıl Çalışır ?</title>
      <link>http://yazilim.aykutasil.com/2017/01/tcp/ip-nas%C4%B1l-%C3%A7al%C4%B1%C5%9F%C4%B1r-/</link>
      <pubDate>Wed, 11 Jan 2017 18:05:02 +0300</pubDate>
      
      <guid>http://yazilim.aykutasil.com/2017/01/tcp/ip-nas%C4%B1l-%C3%A7al%C4%B1%C5%9F%C4%B1r-/</guid>
      <description>

&lt;h1 id=&#34;tcp-ip-nasıl-çalışır&#34;&gt;TCP/IP Nasıl Çalışır ?&lt;/h1&gt;

&lt;p&gt;Bilgisayar ağları kullanılarak bilgisayarların birbirileriyle haberleşmeye başladıkları ilk yıllarda iki bilgisayarın birbiriyle haberleşebilmeleri için aynı marka/model cihazları kullanmaları gerekiyordu. Bunun üzerine farklı üreticiler tarafından üretilen cihazların birbiriyle sorunsuz ve belirli bir düzen içinde haberleşebilmesi için çeşitli standartlar geliştirilmiştir.&lt;/p&gt;

&lt;p&gt;Bunlardan en çok kullanılanı Açık Sistem Bağlantıları komitesi tarafından geliştirilen 7 katmanlı OSI referans modeli ve Amerikan Savunma Bakanlığı tarafından geliştirilen TCP/IP referans modelidir. OSI iki bilgisayar arasındaki haberleşme problemini çözmek için 7 katmanlı (aşamalı) bir ağ sistemi önermiştir.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://imgur.com/TVlx38I&#34;&gt;&lt;img src=&#34;http://i.imgur.com/TVlx38I.gif&#34; title=&#34;source: imgur.com&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;OSI referans modelindeki 7 katmana karşılık TCP/IP referans modeli 4 katmanlı bir çözüm sunar ve 7 katmanlı OSI modeline göre daha hızlı bir iletişim imkânı sunar. OSI modeli iletişim standartlarını belirlemeye yöneliktir ve TCP/IP daha uygulanabilir bir model olduğu için daha çok uygulamaya yöneliktir.&lt;/p&gt;

&lt;h2 id=&#34;tcp-ip-nedir&#34;&gt;TCP/IP Nedir?&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;TCP/IP&lt;/strong&gt; birçok protokolün toplandığı bir protokoller ailesidir. Bu referans modeline en çok kullanılan iki protokolün ismi verilmiştir; TCP (Transmission Control Protocol) ve IP (Internet Protocol). Bu referans modelinde 4 farklı katmanda 15’ten fazla protokol vardır. Veriler bu katmanlar arasında sırasıyla paketlenerek gönderilir, alıcıda ise paketlemenin tersi sırayla teker teker açılarak veri ulaştırılmış olur.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;► Protokol:&lt;/strong&gt; Protokoller cihazlar arası iletişimde kullanılan, iletişim kurallarını belirleyen ağ dilleridir. Referans modelinin her katmanda ayrı protokoller görev yapar. Farklı referans modellerinde aynı protokoller çalışabilir.&lt;/p&gt;

&lt;h2 id=&#34;tcp-ip-referans-modeli-katmanları&#34;&gt;TCP/IP Referans Modeli Katmanları&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://imgur.com/vXJSOn0&#34;&gt;&lt;img src=&#34;http://i.imgur.com/vXJSOn0.jpg&#34; title=&#34;source: imgur.com&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;► Uygulama katmanı:&lt;/strong&gt; Bu katmanda gönderilecek veri tipi ve veriyi işleyen uygulamalar bulunur. Örneğin bir HTML web sayfası ve bu veri tipini kullanan HTTP protokolü bu katmandadır. OSI modelindeki sunum ve oturum katmanları TCP/IP modelinde uygulama katmanı içerisinde yer alır. E-Posta gönderimi için kullanılan SMTP ve dosya gönderimi için kullanılan FTP protokolleri bu katmanda bulunur.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;► Taşıma katmanı:&lt;/strong&gt; Bu katmanda verinin nasıl gönderileceği belirlenir. Veri güvenliği, hata kontrolü gibi işlemler yapılır. TCP ve UDP bu katmandadır. TCP klasik veri aktarımında UDP ise medya aktarımında kullanılır. TCP, UDP ye göre daha güvenli fakat daha yavaş çalışır. Çünkü TCP ‘de gönderilen her veri paketinin ardından verinin yerine doğru bir şekilde ulaşıp ulaşmadığı kontrol edilir.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;► Ağ katmanı:&lt;/strong&gt; IP katmanı olarak da adlandırılan bu katman da verilerin gideceği adres veriye eklenir yani veri bu katmandan gönderilir ve yönlendirilir. IPv4 ün gelecekte yetersiz kalma durumuna karşı IPv6 sistemine geçmek için çalışmalar başlatılmıştır.IPv4 32 bit iken IPv6 ile 128 bitlik adresler kullanılacak. Bu sayede daha fazla cihaza IP adresi atanabilecek.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;► Fiziksel katman:&lt;/strong&gt; Bu katman verinin hangi yolla gönderileceği belirlenir. İletişim ortamının özelliklerini, haberleşme hızını ve kodlama şemasını belirler. Ethernet, Wi-Fi, Token Ring, ATM gibi protokoller bu katmanda çalışır.&lt;/p&gt;

&lt;h2 id=&#34;katmanlar-ve-protokoller-nasıl-işler&#34;&gt;Katmanlar ve Protokoller Nasıl İşler?&lt;/h2&gt;

&lt;p&gt;Örneğin bir web sayfası bilgisayarınıza şu şekilde gelir;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;► Web sayfasının saklı olduğu sunucuda uygulamalar sayfanın HTML veri formatında bir çıktısını oluşturur. Ve bu veriyi HTTP protokolüyle gönder komutunu verir. Bunlar 4. katmanda yani uygulama katmanında olur. Buradan çıkan veri 3. katmana yani taşıma katmanına gönderilir.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;► Taşıma katmanında veriye taşıma katmanının bilgileri yani port bilgisi ve veri boyutu eklenir.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;► Üçüncü katmandan çıkan veri paketine ikinci katmanda verinin gönderileceği bilgisayarın (sunucunun) ve sizin bilgisayarınızın IP adresleri ve verinin son halinin boyutu eklenir.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;► Son katmanda yani fiziksel katmanda fiziksel adresler ve verinin yeni boyutu pakete eklenir.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;► Paket sunucudan çıkar ve sunucu ile sizin bilgisayarınız arasındaki binlerce kilometrelik yolu kat ederek bilgisayarınıza ulaşır.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;http://imgur.com/rQQwnvv&#34;&gt;&lt;img src=&#34;http://i.imgur.com/rQQwnvv.png&#34; title=&#34;source: imgur.com&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Veri bilgisayarınıza ulaştığında bu sefer tersi sırayla katmanlardaki protokoller işletilir. Bilgisayarınız önce fiziksel katmanı ardından ağ katmanını, daha sonra taşıma ve uygulama katmanlarını işletir. Ve en sonunda kalan paketi web tarayıcınıza gönderir. Her katmanda ayrı donanımlar görev yapar. Fiziksel katmanda Switch, ağ katmanında Router, taşıma katmanında ise NAT gibi donanımlar kullanılır.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.elektrikport.com/teknik-kutuphane/tcpip-nasil-calisir/9004&#34;&gt;Kaynak&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Android Library &amp; Bintray</title>
      <link>http://yazilim.aykutasil.com/2017/01/android-library--bintray/</link>
      <pubDate>Wed, 11 Jan 2017 17:27:29 +0300</pubDate>
      
      <guid>http://yazilim.aykutasil.com/2017/01/android-library--bintray/</guid>
      <description>&lt;p&gt;Android uygulaması yazarken bazı oluşturmuş olduğunuz yapıları tekrar tekrar yazmak durumunda kalıyorsanız, sizin de artık kendi kütüphanenizi yazmanızın zamanı gelmiş geçiyor demektir. Böyle bir durum söz konusu olmak zorunda değil tabi library oluşturmak için 🙂&lt;/p&gt;

&lt;p&gt;Bu yazının konusu Android Library oluşturmak, oluşturmuş olduğumuz bu kütüphaneyi &lt;strong&gt;maven&lt;/strong&gt; ve &lt;strong&gt;jcenter&lt;/strong&gt; repository e deploy etmek olucak.&lt;/p&gt;

&lt;p&gt;Ve başlayabiliriz.&lt;/p&gt;

&lt;p&gt;İlk olarak &lt;strong&gt;Android Studio&lt;/strong&gt; yu açarak &lt;strong&gt;File &amp;gt; New &amp;gt; New Project&lt;/strong&gt; e tıklayıp yeni bir proje oluşturalım.&lt;/p&gt;

&lt;p&gt;Daha sonra oluşturmuş olduğunuz app e sağ tıklayıp &lt;strong&gt;New &amp;gt; Module&lt;/strong&gt; sekmesinden gerekli yerleri doldurup projemize ekleyelim.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://imgur.com/PQRghY8&#34;&gt;&lt;img src=&#34;http://i.imgur.com/PQRghY8.png&#34; title=&#34;source: imgur.com&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://imgur.com/IV1YJmw&#34;&gt;&lt;img src=&#34;http://i.imgur.com/IV1YJmw.png&#34; title=&#34;source: imgur.com&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://imgur.com/nQHzaY7&#34;&gt;&lt;img src=&#34;http://i.imgur.com/nQHzaY7.png&#34; title=&#34;source: imgur.com&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Oluşturmuş olduğumuz module içerisine kodlarımızı yazıyoruz. Module ümüzün sanki bir projeymiş gibi kendine ait dosyaları vardır. Yani kendine ait bir AndroidManifest.xml dosyası , kendine ait drawable klasörü vs. vardı. İstediğimiz şekilde özelleştirme yapabilir ve istediğimiz herhangi bir projede bu kodları kullanabiliriz.(Zaten yapılmış olanları bu şekilde kullanıyoruz. Neyin nasıl yapıldığını anlamak her zaman için ufkumuzu genişletecektir…)&lt;/p&gt;

&lt;p&gt;Kodlarımızı yazdık. Sıra geldi module ümüzün gradle dosyasını düzenlemeye.&lt;/p&gt;

&lt;p&gt;Ama bundan önce Project düzeyindeki gradle dosyasını güncellememiz gerekli.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath &#39;com.android.tools.build:gradle:2.1.0&#39;
        classpath &#39;com.jfrog.bintray.gradle:gradle-bintray-plugin:1.4&#39;
        classpath &#39;com.github.dcendents:android-maven-gradle-plugin:1.3&#39;
    }
}

allprojects {
    repositories {
        jcenter()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;http://imgur.com/3uET4kz&#34;&gt;&lt;img src=&#34;http://i.imgur.com/3uET4kz.png&#34; title=&#34;source: imgur.com&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ve module ümüzün &lt;strong&gt;gradle&lt;/strong&gt; dosyasını düzenliyoruz.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;apply plugin: &#39;com.android.library&#39;
apply plugin: &#39;com.github.dcendents.android-maven&#39; // maven repository e eklememiz için gerekli gradle plugin
apply plugin: &amp;quot;com.jfrog.bintray&amp;quot; // bintray yapılandırması yapmamız için gerekli gradle plugin
// Kodların devamında göreceğiniz hazır yazılmış gradle tasklerini getiren yapıda, güncellenmesi gereken yerleri
// bu şekilde düzenliyoruz.
ext {
    PUBLISH_GROUP_ID = &#39;com.aykuttasil&#39;
    PUBLISH_ARTIFACT_ID = &#39;androidbasichelper&#39;
    PUBLISH_VERSION = &#39;1.0.0&#39;
}

android {
    compileSdkVersion 23
    buildToolsVersion &amp;quot;23.0.3&amp;quot;

    defaultConfig {
        minSdkVersion 17
        targetSdkVersion 23
        versionCode 1
        versionName &amp;quot;1.0.0&amp;quot;
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile(&#39;proguard-android.txt&#39;), &#39;proguard-rules.pro&#39;
        }
    }
}

// Oluşturmuş olduğumuz kütüphane aşağıdaki bağımlılıklara sahip. Sanki bir uygulama geliştiriyormuş gibi 
// bağımlılık dosyalarını ekliyoruz.
dependencies {
    testCompile &#39;junit:junit:4.12&#39;
    compile &#39;com.android.support:appcompat-v7:23.4.0&#39;
    compile &#39;com.afollestad.material-dialogs:core:0.8.5.9&#39;
    compile &#39;com.joanzapata.iconify:android-iconify-fontawesome:2.1.1&#39;
    compile &#39;com.android.support:appcompat-v7:23.4.0&#39;
    compile &#39;com.android.support:design:23.4.0&#39;
}

// Aşağıda ki linke girip bakarsanız aslında gradle task yazılmış olduğunu görürsünüz. Bu yazılan task ler ile
// oluşturmuş olduğumuz module dosyalarından gerekli dosyalara dönüşümlerini sağlıyoruz.
apply from: &#39;https://raw.githubusercontent.com/blundell/release-android-library/master/android-release-aar.gradle&#39;

def siteUrl = &#39;https://github.com/aykuttasil/AndroidBasicHelper&#39;      // Homepage URL of the library
def gitUrl = &#39;https://github.com/aykuttasil/AndroidBasicHelper.git&#39;   // Git repository URL
group = &amp;quot;com.aykuttasil&amp;quot;

install {
    repositories.mavenInstaller {
        pom {
            project {
                packaging &#39;aar&#39;

                name &#39;com.aykuttasil:androidbasichelper&#39; // TODO
                description = &#39;Android Basic Helper&#39; // TODO
                url siteUrl

                // Set your license
                licenses {
                    license {
                        name &#39;The Apache Software License, Version 2.0&#39;
                        url &#39;http://www.apache.org/licenses/LICENSE-2.0.txt&#39;
                    }
                }
                developers {
                    developer {
                        id &#39;aykuttasil&#39; // TODO
                        name &#39;Aykut Asil&#39; // TODO
                        email &#39;aykuttasil@gmail.com&#39; // TODO
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;http://imgur.com/NPUZYLU&#34;&gt;&lt;img src=&#34;http://i.imgur.com/NPUZYLU.png&#34; title=&#34;source: imgur.com&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://imgur.com/waSW8fe&#34;&gt;&lt;img src=&#34;http://i.imgur.com/waSW8fe.png&#34; title=&#34;source: imgur.com&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Evet gradle dosyalarını düzenledik. Sıra geldi çalıştırmaya.&lt;/p&gt;

&lt;p&gt;Bunun için Android Studio içerisinde ki Terminal kısmına giriyoruz ya da mac in kendi Terminal ini açarak projemizin dizinine giriyoruz.&lt;/p&gt;

&lt;p&gt;Ve aşağıdaki komutu giriyoruz.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;./gradlew clean build generateRelease&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://imgur.com/qd5tC3N&#34;&gt;&lt;img src=&#34;http://i.imgur.com/qd5tC3N.png&#34; title=&#34;source: imgur.com&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://imgur.com/hIScB2P&#34;&gt;&lt;img src=&#34;http://i.imgur.com/hIScB2P.png&#34; title=&#34;source: imgur.com&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://imgur.com/D48QUqE&#34;&gt;&lt;img src=&#34;http://i.imgur.com/D48QUqE.png&#34; title=&#34;source: imgur.com&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://imgur.com/cgp1Abp&#34;&gt;&lt;img src=&#34;http://i.imgur.com/cgp1Abp.png&#34; title=&#34;source: imgur.com&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Evet işlemimize başarılı bir şekilde tamamladık ve gerekli dosyaların oluşturulmasını sağladık.&lt;/p&gt;

&lt;p&gt;Projemizi oluşturduğumuz klasöre gidelim ve &lt;strong&gt;ModuleName &amp;gt; build&lt;/strong&gt; içerisine girerek oluşturulan zip dosyasını  görebiliriz. Bu zip dosyasının içini açarak oluşturulan dosyaları görebilirsiniz. Ve maven repository e bu zip dosyasını ekliceğimizi unutmayın.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://imgur.com/id0McpR&#34;&gt;&lt;img src=&#34;http://i.imgur.com/id0McpR.png&#34; title=&#34;source: imgur.com&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Sıra geldi kütüphanemizi maven ve jcenter repository e deploy etmeye.&lt;/p&gt;

&lt;p&gt;İlk olarak &lt;a href=&#34;https://bintray.com/&#34;&gt;https://bintray.com/&lt;/a&gt; adresine girerek üyeliğimizi oluşturuyoruz. Ve sırasıyla aşağıdaki işlemleri yapıyoruz.&lt;/p&gt;

&lt;p&gt;Hesabımızı oluşturduktan sonra &lt;strong&gt;maven&lt;/strong&gt; içerisine girerek &lt;strong&gt;Add New Package&lt;/strong&gt; diyoruz.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://imgur.com/AGY1vSx&#34;&gt;&lt;img src=&#34;http://i.imgur.com/AGY1vSx.png&#34; title=&#34;source: imgur.com&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Aşağıdaki alanlara gerekli bilgileri giriyoruz.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://imgur.com/82CCD5F&#34;&gt;&lt;img src=&#34;http://i.imgur.com/82CCD5F.png&#34; title=&#34;source: imgur.com&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Daha sonra oluşturmuş olduğumuz package ın içerisine girerek &lt;strong&gt;New Version&lt;/strong&gt; a tıklıyoruz ve &lt;strong&gt;1.0.0&lt;/strong&gt; şeklinde ya da istediğiniz şekilde Name  i düzenliyoruz.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://imgur.com/7qNM2aj&#34;&gt;&lt;img src=&#34;http://i.imgur.com/7qNM2aj.png&#34; title=&#34;source: imgur.com&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://imgur.com/1bC8KSi&#34;&gt;&lt;img src=&#34;http://i.imgur.com/1bC8KSi.png&#34; title=&#34;source: imgur.com&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Oluşturmuş olduğumuz versiyon içerisine girerek &lt;strong&gt;Upload Files&lt;/strong&gt; diyoruz ve daha önce oluşturduğumuz &lt;strong&gt;zip&lt;/strong&gt; dosyasını seçerek upload işlemini tamamlıyoruz.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://imgur.com/T2oG4DP&#34;&gt;&lt;img src=&#34;http://i.imgur.com/T2oG4DP.png&#34; title=&#34;source: imgur.com&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://imgur.com/w99RPib&#34;&gt;&lt;img src=&#34;http://i.imgur.com/w99RPib.png&#34; title=&#34;source: imgur.com&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Kütüphanemizi &lt;strong&gt;maven&lt;/strong&gt; respository yüklemiş bulunmaktayız.&lt;/p&gt;

&lt;p&gt;Fakat Android Studio default olarak &lt;strong&gt;jcenter&lt;/strong&gt; resository kullanmakta. Biz de bu yüzden birkaç işlem daha yapmalıyız ki geliştiriciler kolayca, tek satır ekleyerek kütüphanemizi kullanmaya başlasınlar.&lt;/p&gt;

&lt;p&gt;Aşağıda ki sayfaya gelerek &lt;strong&gt;Add to jCenter&lt;/strong&gt; butonuna tıklıyoruz.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://imgur.com/lMQR4kl&#34;&gt;&lt;img src=&#34;http://i.imgur.com/lMQR4kl.png&#34; title=&#34;source: imgur.com&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ve aşağıdaki gibi gerekli yerleri doldurarak işlemimizi tamamlıyoruz.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://imgur.com/GK7Eq9d&#34;&gt;&lt;img src=&#34;http://i.imgur.com/GK7Eq9d.png&#34; title=&#34;source: imgur.com&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Not :&lt;/strong&gt; Kütüphanemizin kullanımı için birkaç saat beklememiz gerekmektedir. Olmadı diye telaş yapıp kafayı yemeyin 😉&lt;/p&gt;

&lt;p&gt;Bu arada oluşturmuş olduğumuz kütüphanemize aşağıda ki linkten erişip projelerinizde gönül rahatlığıyla kullanabilirsiniz 🙂&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Gradle :&lt;/strong&gt; &lt;code&gt;compile ‘com.aykuttasil:androidbasichelper:1.0.0’&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;GitHub :&lt;/strong&gt; &lt;a href=&#34;https://github.com/aykuttasil/AndroidBasicHelper&#34;&gt;https://github.com/aykuttasil/AndroidBasicHelper&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;Yukarıda ki yöntem ile local inizde &lt;strong&gt;aar&lt;/strong&gt; dosyası oluşturarak manuel bir şekilde bu aar yi repository lere yükleyebilirsiniz.&lt;/p&gt;

&lt;p&gt;Peki bunu sadece birkaç komuta indirgesek ve otomatik yüklemeyi sağlasak nasıl olur ? Bencede güzel olur.&lt;/p&gt;

&lt;p&gt;Yukarıda ki yöntemin yine bir benzeri (daha okunabilir ve kolay) ve artı ilaveleri şeklinde devam edelim.&lt;/p&gt;

&lt;p&gt;Yeni dosya yapımız ve gradle dosyalarımızı yeri aşağıdaki resimdeki gibi olmalı. Burada 3 adet kendimizin oluşturduğu gradle dosyasını görüyorsunuz gradle klasörünün altında. Diğer gradle lar zaten Android Studio tarafından oluşturuluyor.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://imgur.com/cQyvhZb&#34;&gt;&lt;img src=&#34;http://i.imgur.com/cQyvhZb.png&#34; title=&#34;source: imgur.com&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;build.gradle&lt;/strong&gt; dosyalarımızın içeriği aşağıdaki gibidir.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://imgur.com/0M6faiE&#34;&gt;&lt;img src=&#34;http://i.imgur.com/0M6faiE.png&#34; title=&#34;source: imgur.com&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://imgur.com/fO5aXX8&#34;&gt;&lt;img src=&#34;http://i.imgur.com/fO5aXX8.png&#34; title=&#34;source: imgur.com&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ext {
    bintrayRepo = &#39;maven&#39; // maven reposu olduğunu belirtiyoruz
    bintrayName = &#39;basic-helper&#39; 
    orgName = &#39;aykuttasil&#39;

    publishedGroupId = &#39;com.aykuttasil&#39;
    libraryName = &#39;Android Basic Helper&#39;
    artifact = &#39;androidbasichelperlib&#39; // module ile aynı isimde olması gerekiyor !!

    libraryDescription = &#39;Android Basic Helper&#39;

    siteUrl = &#39;https://github.com/aykuttasil/AndroidBasicHelper&#39; 
    gitUrl = &#39;https://github.com/aykuttasil/AndroidBasicHelper.git&#39;

    libraryVersion = rootProject.ext.libraryVersion

    developerId = &#39;aykuttasil&#39;
    developerName = &#39;Aykut Asil&#39;
    developerEmail = &#39;aykuttasil@gmail.com&#39;

    licenseName = &#39;The Apache Software License, Version 2.0&#39;
    licenseUrl = &#39;http://www.apache.org/licenses/LICENSE-2.0.txt&#39;
    allLicenses = [&amp;quot;Apache-2.0&amp;quot;]
}

if (project.rootProject.file(&#39;local.properties&#39;).exists()) {
    apply from: rootProject.file(&#39;gradle/install-v1.gradle&#39;)
    apply from: rootProject.file(&#39;gradle/bintray-android-v1.gradle&#39;)
}


// ./gradlew clean install bintrayUpload
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;ext {
    sdk = 24
    buildTools = &amp;quot;24.0.1&amp;quot;
    minSdk = 17
    libraryVersion = &amp;quot;1.0.20&amp;quot;
    libraryVersionCode = 11
    supportVersion = &amp;quot;24.2.0&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Aşağıda ki resimde gördüğünüz gibi (Android Studio Project görünümüne geçmelisiniz) 3 adet gradle dosyamızı hazırladık. Kod kalabalığı olmasın ve neyin nerede olduğu belli olsun diye bu şekilde yaptık. Yoksa direk build.gradle dosyamızın içine de yazabilirdik.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://imgur.com/6coc2bg&#34;&gt;&lt;img src=&#34;http://i.imgur.com/6coc2bg.png&#34; title=&#34;source: imgur.com&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;apply plugin: &#39;com.github.dcendents.android-maven&#39;

group = publishedGroupId                               // Maven Group ID for the artifact

install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging &#39;aar&#39;
                groupId publishedGroupId
                artifactId artifact

                // Add your description here
                name libraryName
                description libraryDescription
                url siteUrl

                // Set your license
                licenses {
                    license {
                        name licenseName
                        url licenseUrl
                    }
                }
                developers {
                    developer {
                        id developerId
                        name developerName
                        email developerEmail
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl

                }
            }
        }
    }
}
//from https://github.com/workarounds/bundler/blob/master/gradle/install-v1.gradle
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;apply plugin: &#39;com.jfrog.bintray&#39;

version = libraryVersion

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = &#39;sources&#39;
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = &#39;javadoc&#39;
    from javadoc.destinationDir
}
artifacts {
    archives javadocJar
    archives sourcesJar
}

// Bintray
Properties properties = new Properties()
properties.load(project.rootProject.file(&#39;local.properties&#39;).newDataInputStream())

bintray {
    user = properties.getProperty(&amp;quot;bintray.user&amp;quot;)
    key = properties.getProperty(&amp;quot;bintray.apikey&amp;quot;)

    configurations = [&#39;archives&#39;]
    pkg {
        repo = bintrayRepo
        name = bintrayName
        desc = libraryDescription
        userOrg = orgName
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = [&#39;Apache-2.0&#39;]
        publish = true
        publicDownloadNumbers = true
        version {
            desc = libraryDescription
            gpg {
                sign = true //Determines whether to GPG sign the files. The default is false
                passphrase = properties.getProperty(&amp;quot;bintray.gpg.password&amp;quot;)
                //Optional. The passphrase for GPG signing&#39;
            }
        }
    }
}

//from https://github.com/workarounds/bundler/blob/master/gradle/bintray-java-v1.gradle
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;apply plugin: &#39;com.jfrog.bintray&#39;

version = libraryVersion

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = &#39;sources&#39;
}

task javadoc(type: Javadoc) {
    failOnError = false
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = &#39;javadoc&#39;
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

// Bintray
Properties properties = new Properties()
properties.load(project.rootProject.file(&#39;local.properties&#39;).newDataInputStream())

bintray {
    user = properties.getProperty(&amp;quot;bintray.user&amp;quot;)
    key = properties.getProperty(&amp;quot;bintray.apikey&amp;quot;)

    configurations = [&#39;archives&#39;]
    pkg {
        repo = bintrayRepo
        name = bintrayName
        desc = libraryDescription
        userOrg = orgName
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = allLicenses
        publish = true
        publicDownloadNumbers = true
        version {
            desc = libraryDescription
            gpg {
                sign = true //Determines whether to GPG sign the files. The default is false
                passphrase = properties.getProperty(&amp;quot;bintray.gpg.password&amp;quot;)
                //Optional. The passphrase for GPG signing&#39;
            }
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Tüm bu dosya yapısını hazırladıktan sonra bintray konfigürasyonu için birkaç işlem daha kaldı.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;local.properties&lt;/strong&gt; dosyamızın içine bintray bilgilerimizi giriyoruz. Bu bilgileri direk build.gradle içerisine girebilirdik fakat bu bilgilere sadece biz sahip olmalıyız 🙂 ve gitignore un içinde local.properties dosyasının ekli olduğuna dikkat edelim !!&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://imgur.com/hSrkkEc&#34;&gt;&lt;img src=&#34;http://i.imgur.com/hSrkkEc.png&#34; title=&#34;source: imgur.com&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Bintray api key almak için bintray sitesine giderek gerekli sayfaya ulaşıyoruz.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://imgur.com/bmNY7Is&#34;&gt;&lt;img src=&#34;http://i.imgur.com/bmNY7Is.png&#34; title=&#34;source: imgur.com&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://imgur.com/Vot0Fkk&#34;&gt;&lt;img src=&#34;http://i.imgur.com/Vot0Fkk.png&#34; title=&#34;source: imgur.com&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Evet tüm işlemler bu kadar.&lt;/p&gt;

&lt;p&gt;Artık terminalden aşağıdaki komutu yazarak otomatik yüklenmeyi sağlayabiliriz.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;./gradlew clean install bintrayUpload&lt;/code&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Android Runtime Permission</title>
      <link>http://yazilim.aykutasil.com/2017/01/android-runtime-permission/</link>
      <pubDate>Wed, 11 Jan 2017 17:24:52 +0300</pubDate>
      
      <guid>http://yazilim.aykutasil.com/2017/01/android-runtime-permission/</guid>
      <description>&lt;p&gt;Yavaş yavaş mevcut android cihazlarının API level düzeyi doğal olarak yükselmekte ve bizlerinde tabi ki buna ayak uydurması gerekmekte.&lt;/p&gt;

&lt;p&gt;Bunlardan biri de Android M – Marshmallow (23) ile  gelen Runtime Permissions olayı.&lt;/p&gt;

&lt;p&gt;Kullanıcı açısından bakıldığında oldukça yararlı birşey gibi duruyor ama tabi ki biz kullanıcılar runtime sırasında çıkan permission dialog daki yazıyı ne kadar okuruz ve buna göre onay veririz meçhul. Aslına bakarsanız çok da okunacağını düşünmüyorum ama olsun yine de güzel. İlerleyen zamanlarda illa ki bu alışkanlığı edinecek insanlar olacaktır 😉&lt;/p&gt;

&lt;p&gt;Fazla uzatmadan birkaç link ve ipucu vericem.&lt;/p&gt;

&lt;p&gt;Android Runtime Permissions olayının nasıl yapıldığını görmek için&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Link : &lt;a href=&#34;https://github.com/googlesamples/android-RuntimePermissions&#34;&gt;https://github.com/googlesamples/android-RuntimePermissions&lt;/a&gt; burada süper bir örnek var.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Link : &lt;a href=&#34;http://android-developers.blogspot.com.tr/2015/08/building-better-apps-with-runtime.html&#34;&gt;http://android-developers.blogspot.com.tr/2015/08/building-better-apps-with-runtime.html&lt;/a&gt; burada kısa bir özet var.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Takıldığınız yeri yorumlarda belirtebilirsiniz.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Not :&lt;/strong&gt; Örneği incelediğiniz de şu satırı yazarken dikkat edin.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;ActivityCompat.requestPermissions(this, new String[]{android.Manifest.permission.CAMERA},123456);&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;burada sadece&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Manifest.permission.CAMERA&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;yerine&lt;/p&gt;

&lt;p&gt;&lt;code&gt;android.Manifest.permission.CAMERA&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;kullanacaksınız. Yoksa izin listesini bulamaz.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Mac OS Arduino Uno (Klon) Kurulumu</title>
      <link>http://yazilim.aykutasil.com/2017/01/mac-os-arduino-uno-klon-kurulumu/</link>
      <pubDate>Wed, 11 Jan 2017 17:22:38 +0300</pubDate>
      
      <guid>http://yazilim.aykutasil.com/2017/01/mac-os-arduino-uno-klon-kurulumu/</guid>
      <description>&lt;p&gt;Sizde benim gibi klon Arduino Uno kartınızı çalıştıramayıp bozuk zannettiyseniz doğru yerdesiniz.&lt;/p&gt;

&lt;p&gt;Arduino Uno klon kartlarında orijinal Arduino Uno kartına göre farklı bir işlemci kullanılmış ( daha ucuz olanından 😉 ) ve bu yüzden Mac OS kullanıyorsanız ayrı bir driver dosyası indirmeniz gerekmekte.&lt;/p&gt;

&lt;p&gt;Orijinal Arduino Kartlarının yapımı iki koldan yürüyor. Bir taraf open source u destekleyen diğer taraf parayı destekleyen insanlardan oluşuyor(muş).&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://www.arduino.cc&#34;&gt;http://www.arduino.cc&lt;/a&gt;   Parayı destekleyen tarafın sitesi&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://www.arduino.org&#34;&gt;http://www.arduino.org&lt;/a&gt;  Open source u destekleyen taraf&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ben &lt;strong&gt;arduino.org&lt;/strong&gt; daki Arduino IDE yi kurdum çünkü diğerinde birkaç sorun yaşamıştım ama günün sonunda her iki siteden indirdiğiniz IDE ile de geliştirme yapabilirsiniz.&lt;/p&gt;

&lt;p&gt;Dedikten sonra;&lt;/p&gt;

&lt;p&gt;Mac OS a klon Arduino Uno driverını yüklemek için (CH341) -&amp;gt;  &lt;a href=&#34;http://www.wch.cn/download/CH341SER_MAC_ZIP.html&#34;&gt;http://www.wch.cn/download/CH341SER_MAC_ZIP.html&lt;/a&gt;
linkinden dosyayı indirin. Çince ama idare edin, Download a basmanız yeter 😉&lt;/p&gt;

&lt;p&gt;Ya da bu linki kullanabilirsiniz : &lt;a href=&#34;http://javacolors.blogspot.com.tr/2014/08/dccduino-usb-drivers-ch340-ch341-chipset.html&#34;&gt;http://javacolors.blogspot.com.tr/2014/08/dccduino-usb-drivers-ch340-ch341-chipset.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Daha sonra terminal e açarak aşağıdaki komutu yazın.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo nvram boot-args=&amp;quot;kext-dev-mode=1&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Makineye yeniden başlatın.
Artık Arduino Uno yu Mac OS görüyor olması lazım.&lt;/p&gt;

&lt;p&gt;Olmadı şu linke bir göz atabilirsin : &lt;a href=&#34;http://arduino.stackexchange.com/questions/12133/mac-osx-yosemite-no-serial-ports-showing-for-uno-r3&#34;&gt;http://arduino.stackexchange.com/questions/12133/mac-osx-yosemite-no-serial-ports-showing-for-uno-r3&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ya da şu video yu izleyebilirsin : &lt;a href=&#34;https://www.youtube.com/watch?v=oHqYK1ezRzo&#34;&gt;https://www.youtube.com/watch?v=oHqYK1ezRzo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Olduysa Arduino IDE nizden port ayarlarını yapmayı unutmayın.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SQL SCOPE_IDENTITY()</title>
      <link>http://yazilim.aykutasil.com/2017/01/sql-scope_identity/</link>
      <pubDate>Wed, 11 Jan 2017 17:20:37 +0300</pubDate>
      
      <guid>http://yazilim.aykutasil.com/2017/01/sql-scope_identity/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Kısaca özetlemek gerekirse :&lt;/strong&gt; insert ile kayıt edilen tablo satırının id sini getirir.&lt;/p&gt;

&lt;p&gt;Yapılan son kaydın id sini almak için uzun  yol olarak insert sorgusunu çalıştırdıktan sonra bir select sorgusu atarak ve order by id desc diyerek ilk sıradaki kaydı okuyabilir ve bu kaydın id sini alabiliriz.&lt;/p&gt;

&lt;p&gt;Tüm bunları yapmaktansa:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;DECLARE @son_satir_id INT;

INSERT  INTO tbQwerty
        ( 
          Ad ,
          Soyad
        )
VALUES  ( 
          &#39;Aykut&#39;
          &#39;Asil&#39;
        )
SET @son_satir_id = SCOPE_IDENTITY();
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ayrıntılı Bilgi  : &lt;a href=&#34;https://technet.microsoft.com/tr-tr/library/ms190315(v=sql.110).aspx&#34;&gt;https://technet.microsoft.com/tr-tr/library/ms190315(v=sql.110).aspx&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ayrıntılı Bilgi : &lt;a href=&#34;https://ahmetrende.com/2010/11/23/sql-serverda-son-kaydin-id-degerini-almak-scope_identity/&#34;&gt;https://ahmetrende.com/2010/11/23/sql-serverda-son-kaydin-id-degerini-almak-scope_identity/&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Javascript Saçmalıkları</title>
      <link>http://yazilim.aykutasil.com/2017/01/javascript-sa%C3%A7mal%C4%B1klar%C4%B1/</link>
      <pubDate>Wed, 11 Jan 2017 17:14:22 +0300</pubDate>
      
      <guid>http://yazilim.aykutasil.com/2017/01/javascript-sa%C3%A7mal%C4%B1klar%C4%B1/</guid>
      <description>&lt;p&gt;Saatlerdir uğraştığım ve javascriptle temel düzeyden biraz daha ileri düzeyde uğraşan kişilerin başına gelebilecek bir saçmalığı belirtmek istiyorum.&lt;/p&gt;

&lt;p&gt;Her dilde var olan Replace fonksiyonu Javascript de saçma sapan bir şekilde yapılandırılmış. Bu kadar basit bir şeyi bu kadar komplike bir vaziyete sokmak gerçekten harika.&lt;/p&gt;

&lt;p&gt;Örneğin elinizde&lt;/p&gt;

&lt;p&gt;&lt;code&gt;var degisken = ‘İSTANBUL’ ;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;şeklinde bir değişkeniniz var. Ve siz ihtiyacınız doğrultusunda bu kelimeyi veritabanından çektiğiniz ‘istanbul’ kelimesi ile karşılaştırmak istiyorsunuz.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt; $(&#39;#Iller &amp;gt; option&#39;).each(function(index) {
                var il = &#39;istanbul&#39;; // veritabanından çektiğimizi düşünelim
               
                var txt = $(this).text() // -&amp;gt; &#39;İSTANBUL&#39;
                if (txt === il) {
                   // Diğer işlemler
                }           
            });
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Yukarıda&lt;/p&gt;

&lt;p&gt;&lt;code&gt;if (txt === il)&lt;/code&gt;
ile eşitlik kontrol ediliyor.&lt;/p&gt;

&lt;p&gt;Ve &lt;strong&gt;true&lt;/strong&gt; değeri dönmüyor. Çünkü biri küçük diğeri büyük harfle yazılmış. Gayet normal.&lt;/p&gt;

&lt;p&gt;Peki tamam.&lt;/p&gt;

&lt;p&gt;Büyük yazılan &lt;strong&gt;‘İSTANBUL’&lt;/strong&gt; kelimesini javascript in çok değerli toLowerCase() fonksiyonu ile küçültüyoruz.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;var txt = txt.toLowerCase(); // -&amp;gt; &#39;istanbul&#39;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Evet ikisi de ‘istanbul’ oldu artık. Peki şimdi yukarıda belirttiğimiz eşitlik sağlanıcak mı ?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;HAYIR !&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Çünkü &lt;strong&gt;‘İSTANBUL’&lt;/strong&gt; değişkenini Javascript abimiz küçültürken, büyük ‘İ’ harfiyle sevişiyor. Ve eşitlik bir türlü sağlanamıyor.&lt;/p&gt;

&lt;p&gt;Birde çok değerli Javascript abimizin ( dünya ahiret bacım bu saatten sonra) replace fonksiyonu efsane çalışıyor.&lt;/p&gt;

&lt;p&gt;Replace olmasını istediğimiz değerin sadece ilkini değiştiriyor. Diğerleri pek umrunda değil. Bu nedenle /İ/g fln saçma salak bişiler yapmak gerekiyor.&lt;/p&gt;

&lt;p&gt;Aşağıda ki fonksiyonu çözüm için kullanabilirsiniz.&lt;/p&gt;

&lt;p&gt;Bu dile şuan – günümüzde (31/03/2016) çok da güvenmeyin abiler ablalar !. Zaten kısa bir araştırma sonrasında Javascript tutarsızlıklarıyla ilgili bir sürü dökümana ulaşabilirsiniz.
&lt;strong&gt;Not:&lt;/strong&gt; Esneklik beraberinde hata getirir.&lt;/p&gt;

&lt;p&gt;Çözüm (Gerçekten bu yazıyı yazarken sinirliyim !)&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;            function clearText(text) {
                return text.replace(/İ/g, &amp;quot;i&amp;quot;).replace(/Ş/g, &amp;quot;s&amp;quot;).replace(/Ü/g, &amp;quot;u&amp;quot;).replace(/Ö/g, &amp;quot;o&amp;quot;).replace(/Ç/g, &amp;quot;c&amp;quot;)
                    .toLowerCase()
                    .replace(/ü/g, &amp;quot;u&amp;quot;).replace(/ı/g, &amp;quot;i&amp;quot;).replace(/ç/g, &amp;quot;c&amp;quot;)
                    .replace(/ğ/g, &amp;quot;g&amp;quot;).replace(/ş/g, &amp;quot;s&amp;quot;).replace(/ö/g, &amp;quot;o&amp;quot;);
             
            }
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Android Glide ve Palette Kullanımı</title>
      <link>http://yazilim.aykutasil.com/2017/01/android-glide-ve-palette-kullan%C4%B1m%C4%B1/</link>
      <pubDate>Wed, 11 Jan 2017 17:11:30 +0300</pubDate>
      
      <guid>http://yazilim.aykutasil.com/2017/01/android-glide-ve-palette-kullan%C4%B1m%C4%B1/</guid>
      <description>&lt;p&gt;Google ın resim işlemleri için geliştirmiş olduğu Glide kütüphanesi Android kaynaklarını, cache mekanizmasını vs. verimli şekilde kullanarak uygulamanıza hız ve kalite kazandırır.&lt;/p&gt;

&lt;p&gt;Sizde projenizde resimlerle ilgili herhangi bir işlem yapıyorsanız bu kütüphaneyi incelemenizi tavsiye ediyorum.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Github :&lt;/strong&gt; &lt;a href=&#34;https://github.com/bumptech/glide&#34;&gt;https://github.com/bumptech/glide&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Gradle :&lt;/strong&gt; &lt;code&gt;compile ‘com.github.florent37:glidepalette:1.0.6’&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Google ın geliştirmiş olduğu Palette kütüphanesi ise, resimlerinizin renkleriyle ilgilenir. Daha farklı işlemler içinde kullanılabilir resim boyutlandırma vs. gibi. Ama renklerle ilgili işlemler için oldukça güzel bir kütüphanedir.&lt;/p&gt;

&lt;p&gt;Link : &lt;a href=&#34;http://developer.android.com/reference/android/support/v7/graphics/Palette.html&#34;&gt;Android Developer&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Gradle : compile ‘com.android.support:palette-v7:23.1.1’&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Bu iki güzel kütüphanenin birlikte kullanımı ile oldukça güzel işler çıkabilir&lt;/p&gt;

&lt;p&gt;Bunun için de bir kütüphane mevcut 🙂&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Github :&lt;/strong&gt; &lt;a href=&#34;https://github.com/florent37/GlidePalette&#34;&gt;https://github.com/florent37/GlidePalette&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt; Glide.with(mContext).load(&amp;quot;ImageAdress&amp;quot;)
                         // Her resim için farklı bir signature belirtmeliyiz. Bu sayede resimlerin tekrar tekrar yüklenmesini engellemiş oluruz.
                        .signature(new StringSignature(&amp;quot;ImageSignature&amp;quot;))
                        .centerCrop()
                        .listener(GlidePalette.with(&amp;quot;ImageAdress&amp;quot;)
                                        .use(GlidePalette.Profile.VIBRANT_LIGHT)
                                        .intoTextColor(txt, GlidePalette.Swatch.BODY_TEXT_COLOR)
                                        .crossfade(true)

                                         // Belirttiğimiz ImageAdress den gelen resmimiz kullanılmaya hazır olduğunda burada yakalayabilir ve 
                                         // istediğimiz özelleştirmeyi yapabiliriz.
                                         // Biz burada yüklenen resmin palette.getDarkMutedColor(DefaultColor) fonksiyonu ile rengini yakalıyoruz ve CollapsingToolbar ın expand olduğu durumda ki title rengini değiştiriyoruz.
                                        .intoCallBack(new BitmapPalette.CallBack() {
                                            @Override
                                            public void onPaletteLoaded(@Nullable Palette palette) {
                                                mCollapsingToolbar.setExpandedTitleColor(palette.getDarkMutedColor(Color.BLACK));
                                            }
                                        })
                                        /*
                                        .setGlideListener(new RequestListener&amp;lt;String, GlideDrawable&amp;gt;() {
                                            @Override
                                            public boolean onException(Exception e, String model, Target&amp;lt;GlideDrawable&amp;gt; target, boolean isFirstResource) {
                                                return false;
                                            }

                                            @Override
                                            public boolean onResourceReady(GlideDrawable resource, String model, Target&amp;lt;GlideDrawable&amp;gt; target, boolean isFromMemoryCache, boolean isFirstResource) {
                                                return false;
                                            }
                                        })
                                        // optional: do stuff with the builder
                                        .setPaletteBuilderInterceptor(new BitmapPalette.PaletteBuilderInterceptor() {
                                            @NonNull
                                            @Override
                                            public Palette.Builder intercept(Palette.Builder builder) {
                                                return builder.resizeBitmapSize(100);
                                            }
                                        })
                                        */
                        )
                        .into(mCollapsingImageView);
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Android ViewPager</title>
      <link>http://yazilim.aykutasil.com/2017/01/android-viewpager/</link>
      <pubDate>Wed, 11 Jan 2017 17:07:51 +0300</pubDate>
      
      <guid>http://yazilim.aykutasil.com/2017/01/android-viewpager/</guid>
      <description>&lt;p&gt;Android ViewPager yapısı içerisinde birçok hazır fonksiyonu, animasyonu ve özelleştirilebilir kontrolleri barındırır.&lt;/p&gt;

&lt;p&gt;İhtiyaçlarımız doğrultusunda bu yapıyı özelleştirebilir ve ViewPager ın bize sunmuş olduğu rahatlığı kullanabiliriz.&lt;/p&gt;

&lt;script src=&#34;https://gist.github.com/aykuttasil/bc92ffd516a9f6df1ac9.js&#34;&gt;&lt;/script&gt;
</description>
    </item>
    
    <item>
      <title>Android RecyclerView</title>
      <link>http://yazilim.aykutasil.com/2017/01/android-recyclerview/</link>
      <pubDate>Wed, 11 Jan 2017 16:39:33 +0300</pubDate>
      
      <guid>http://yazilim.aykutasil.com/2017/01/android-recyclerview/</guid>
      <description>&lt;p&gt;Android &lt;strong&gt;RecyclerView&lt;/strong&gt; yapısı &lt;strong&gt;ListView&lt;/strong&gt; in oldukça özelleşmiş bir halidir. ListView kullanarak yaptığınız işlemleri bu yapı ile çok daha kaliteli ve kolay yapabilirsiniz. ListView kullanırken karşılaşmış olduğumuz sorunları, ( ViewHolder yapısının kullanılmasının çoğu durumda zorunlu olması , Scroll durumunda liste elemanlarının birbirine karışması gibi… ) kendi iç yapısı ile ve çalışma mantığı ile çözmüştür. ViewHolder yapısını kullanmak zorunludur 🙂&lt;/p&gt;

&lt;p&gt;Ayrıca &lt;strong&gt;RecyclerView&lt;/strong&gt;, &lt;strong&gt;CoordinatorLayout&lt;/strong&gt; bileşeni ile koordine şekilde çalışır.Ek kodlamaya ihtiyaç duymaz.&lt;/p&gt;

&lt;p&gt;ListView in özelleştirilmesi için birçok kütüphane mevcuttur.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Drag-Drop işlemleri için &lt;a href=&#34;https://github.com/bauerca/drag-sort-listview&#34;&gt;https://github.com/bauerca/drag-sort-listview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Swipe işlemleri &lt;a href=&#34;https://github.com/timroes/EnhancedListView&#34;&gt;https://github.com/timroes/EnhancedListView&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ama bu kütüphane ve benzerleri ömürlerini doldurmuşlar. Çünkü artık RecyclerView var.&lt;/p&gt;

&lt;p&gt;Evet bu kadar tanıtımdan sonra artık örnek kodlara geçebiliriz.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Android CardView yapısı için oldukça güzel hazırlanmış bir kütüphane mevcut. Biz de bu kütüphane ile, RecyclerView içersinde göstermek istediğimiz liste elemanlarımızı CardView içine gömücez. Bu sayede hem daha güzel görünüm elde edicez hem de CardView bileşeninin nimetlerinden yararlanıcaz.&lt;/p&gt;

&lt;p&gt;CardsLib Link : &lt;a href=&#34;https://github.com/gabrielemariotti/cardslib&#34;&gt;CardsLib&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Android Collections</title>
      <link>http://yazilim.aykutasil.com/2017/01/android-collections/</link>
      <pubDate>Wed, 11 Jan 2017 16:10:10 +0300</pubDate>
      
      <guid>http://yazilim.aykutasil.com/2017/01/android-collections/</guid>
      <description>&lt;p&gt;Tüm dillerde olduğu gibi Java’da da (Android) Collections yapısı oldukça önemli ve her daim kullanılabilitesi fazladır. Bazen farkına varmasakta tam olarak ihtiyacımız olan fonksiyon zaten orda duruyordur ve kullanılmayı bekliyordur. Bu nedenle Collection yapılarını iyi bilmekte fayda var diye düşünüyorum.&lt;/p&gt;

&lt;p&gt;Bu sayfa da &lt;strong&gt;Collection&lt;/strong&gt; yapısını ve oldukça önemli fonksiyonlarını göreceğiz.&lt;/p&gt;

&lt;p&gt;Not: Sayfa sürekli olarak güncellenmeye çalışılacaktır. Eğer siz de katkıda bulunmak isterseniz yorum bırakabilirsiniz.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Collections.swap&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Swap&lt;/strong&gt; kelime anlamı ile takas anlamına gelmektedir. Mevcut dizimiz içerisinde elemanların yerlerini değiştirmeye yarar.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;private static final String[] STRINGS = new String[]{
        &amp;quot;1&amp;quot;, &amp;quot;2&amp;quot;, &amp;quot;3&amp;quot;, &amp;quot;4&amp;quot;, &amp;quot;5&amp;quot;
};

private final List mItems = new ArrayList&amp;lt;&amp;gt;();
public void setArray()
{
  mItems.addAll(Arrays.asList(STRINGS));
}
mItems listemizi yazdırdığımızda sonuç şu şekilde olacaktır.

//  1,2,3,4,5

 

private void elemanYerDegistir()
{
  Collections.swap(mItems, 0, 4);
}
mItems listemizi yazdırdığımızda sonuç şu şekilde olacaktır.

//  5,2,3,4,1
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Android Custom Toolbar Title</title>
      <link>http://yazilim.aykutasil.com/2017/01/android-custom-toolbar-title/</link>
      <pubDate>Wed, 11 Jan 2017 16:01:33 +0300</pubDate>
      
      <guid>http://yazilim.aykutasil.com/2017/01/android-custom-toolbar-title/</guid>
      <description>&lt;p&gt;Android Toolbar bileşeni çok yönlü bir yapıya sahiptir. Android Design Library  kullanarak ve AppBarLayout içerisinde tanımlanarak oldukça farklı şekillere bürünebilir.&lt;/p&gt;

&lt;p&gt;Genel kullanımı aşağıdaki gibidir.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot;?&amp;gt;
&amp;lt;android.support.design.widget.CoordinatorLayout xmlns:android=&amp;quot;http://schemas.android.com/apk/res/android&amp;quot;
 xmlns:app=&amp;quot;http://schemas.android.com/apk/res-auto&amp;quot;
 xmlns:tools=&amp;quot;http://schemas.android.com/tools&amp;quot;
 android:layout_width=&amp;quot;match_parent&amp;quot;
 android:layout_height=&amp;quot;match_parent&amp;quot;
 android:background=&amp;quot;@color/primary_dark&amp;quot;
 tools:context=&amp;quot;.MainActivity&amp;quot;&amp;gt;

 &amp;lt;FrameLayout
 android:id=&amp;quot;@+id/container&amp;quot;
 android:layout_width=&amp;quot;match_parent&amp;quot;
 android:layout_height=&amp;quot;match_parent&amp;quot;&amp;gt;

 &amp;lt;/FrameLayout&amp;gt;


 &amp;lt;android.support.design.widget.FloatingActionButton
 android:id=&amp;quot;@+id/fab&amp;quot;
 android:layout_width=&amp;quot;wrap_content&amp;quot;
 android:layout_height=&amp;quot;wrap_content&amp;quot;
 android:layout_gravity=&amp;quot;bottom|end&amp;quot;
 android:layout_margin=&amp;quot;@dimen/fab_margin&amp;quot;
 android:src=&amp;quot;@android:drawable/ic_dialog_email&amp;quot; /&amp;gt;


 &amp;lt;android.support.design.widget.AppBarLayout
 android:layout_width=&amp;quot;match_parent&amp;quot;
 android:layout_height=&amp;quot;wrap_content&amp;quot;
 app:elevation=&amp;quot;0dp&amp;quot;&amp;gt;

 &amp;lt;android.support.v7.widget.Toolbar
 android:id=&amp;quot;@+id/toolbar&amp;quot;
 android:layout_width=&amp;quot;match_parent&amp;quot;
 android:layout_height=&amp;quot;wrap_content&amp;quot;
 android:background=&amp;quot;@color/primary_dark&amp;quot;
 android:minHeight=&amp;quot;?attr/actionBarSize&amp;quot;
 app:popupTheme=&amp;quot;@style/AppTheme.PopupOverlay&amp;quot;/&amp;gt;


 &amp;lt;/android.support.design.widget.AppBarLayout&amp;gt;

&amp;lt;/android.support.design.widget.CoordinatorLayout&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;app:elevation=&amp;quot;0dp&amp;quot;&lt;/code&gt;  // AppBarLayout içerisinde ki bu tanımlama default olarak tanımlanmış gölgeyi kaldırır.&lt;/p&gt;

&lt;p&gt;Tanımlamış olduğumuz Toolbar a Activity içerisinden (ya da Fragment vb) erişerek gerekli tanımlamaları vs yapabilirsiniz.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Toolbar Custom Title&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Toolbarınızı tanımladığınız yerde aşağıdaki değişiklikleri yaparak Title ınızı istediğiniz gibi özelleştirebilirsiniz.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;android.support.design.widget.AppBarLayout
    android:layout_width=&amp;quot;match_parent&amp;quot;
    android:layout_height=&amp;quot;wrap_content&amp;quot;
    app:elevation=&amp;quot;0dp&amp;quot;&amp;gt;

    &amp;lt;android.support.v7.widget.Toolbar
        android:id=&amp;quot;@+id/toolbar&amp;quot;
        android:layout_width=&amp;quot;match_parent&amp;quot;
        android:layout_height=&amp;quot;wrap_content&amp;quot;
        android:background=&amp;quot;@color/primary_dark&amp;quot;
        android:minHeight=&amp;quot;?attr/actionBarSize&amp;quot;
        app:popupTheme=&amp;quot;@style/AppTheme.PopupOverlay&amp;quot;&amp;gt;

        &amp;lt;TextView
            android:id=&amp;quot;@+id/toolbar_title&amp;quot;
            style=&amp;quot;@style/ToolbarTitleStyle&amp;quot;
            android:layout_width=&amp;quot;wrap_content&amp;quot;
            android:layout_height=&amp;quot;wrap_content&amp;quot;
            android:layout_gravity=&amp;quot;center&amp;quot; /&amp;gt;
    &amp;lt;/android.support.v7.widget.Toolbar&amp;gt;


&amp;lt;/android.support.design.widget.AppBarLayout&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;FragmentX&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt; private void setToolbar() {
 Toolbar toolbar = (Toolbar) mActivity.findViewById(R.id.toolbar);
 mActivity.setSupportActionBar(toolbar);
 mActivity.getSupportActionBar().setHomeButtonEnabled(true);
 mActivity.getSupportActionBar().setDisplayHomeAsUpEnabled(true);
 mActivity.getSupportActionBar().setDisplayShowTitleEnabled(false); // Default olarak tanımlanmış Title ın gösterilmemesini belirtiyoruz.
 ((TextView) toolbar.findViewById(R.id.toolbar_title)).setText(&amp;quot;SORU SOR&amp;quot;); // Custom olarak belirlenmiş TextView e text ataması yapıyoruz.
}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Mac OS ile MSSQL Bağlantısı Kurmak</title>
      <link>http://yazilim.aykutasil.com/2017/01/mac-os-ile-mssql-ba%C4%9Flant%C4%B1s%C4%B1-kurmak/</link>
      <pubDate>Wed, 11 Jan 2017 15:50:10 +0300</pubDate>
      
      <guid>http://yazilim.aykutasil.com/2017/01/mac-os-ile-mssql-ba%C4%9Flant%C4%B1s%C4%B1-kurmak/</guid>
      <description>

&lt;p&gt;&lt;strong&gt;MSSQL&lt;/strong&gt; oldukça gelişmiş ve birçok firma – kişi tarafından kullanılan bir veritabanın sistemidir. Oldukça büyük miktarda verinizi, doğru şekilde tasarlayarak tatmin edici derecede hızlı bir şekilde kontrol edebilirsiniz.&lt;/p&gt;

&lt;p&gt;Senaryomuz şu şekilde;&lt;/p&gt;

&lt;p&gt;Mac OS yüklü bilgisayarımızdan MSSQL yüklü sunucumuza bağlantı kurmak istiyoruz.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Not :&lt;/strong&gt; Aşağıda bahsedecek olduğum uygulamayı  Windows yüklü bilgisayarınızda da SQL Management Studio alternatifi olarak kullanabilirsiniz.&lt;/p&gt;

&lt;h2 id=&#34;dbeaver&#34;&gt;Dbeaver&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://dbeaver.jkiss.org/download/&#34;&gt;http://dbeaver.jkiss.org/download/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Tüm işletim sistemleri için sürüm mevcuttur. Kendi işletim sisteminize göre olanı indirip kullanmaya başlayabilirsiniz.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Database Connection&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://imgur.com/RQqA0wI&#34;&gt;&lt;img src=&#34;http://i.imgur.com/RQqA0wI.png&#34; title=&#34;source: imgur.com&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Connections&lt;/strong&gt; a sağ tıklayarak Create New Connection diyoruz.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://imgur.com/wb55lJW&#34;&gt;&lt;img src=&#34;http://i.imgur.com/wb55lJW.png&#34; title=&#34;source: imgur.com&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Burada SSH yapılandırması yapabiliriz.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://imgur.com/R0Vtyt9&#34;&gt;&lt;img src=&#34;http://i.imgur.com/R0Vtyt9.png&#34; title=&#34;source: imgur.com&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Connection Type&lt;/strong&gt; için seçenekler mevcut.Edit diyerek arasındaki farkları görebiliriz. Biz Test seçeneğini seçiyoruz.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://imgur.com/6ft683a&#34;&gt;&lt;img src=&#34;http://i.imgur.com/6ft683a.png&#34; title=&#34;source: imgur.com&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Aşağıdaki gibi gerekli yerleri dolduruyoruz.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://imgur.com/BoSw3vL&#34;&gt;&lt;img src=&#34;http://i.imgur.com/BoSw3vL.png&#34; title=&#34;source: imgur.com&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hangi veritabanına bağlanmak istiyorsak onu seçiyoruz. Eğer ilk defa seçmiş iseniz bazı dosyalar indirmek isteyecektir.&lt;/p&gt;

&lt;p&gt;Biz &lt;strong&gt;MS SQL Server&lt;/strong&gt; ve &lt;strong&gt;Microsoft Driver&lt;/strong&gt; seçeneğini seçiyoruz.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Test Connection&lt;/strong&gt; butonuna basarak bağlantı durumunu kontrol edebiliriz.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://imgur.com/zM89SAI&#34;&gt;&lt;img src=&#34;http://i.imgur.com/zM89SAI.png&#34; title=&#34;source: imgur.com&#34; /&gt;&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SQL Management Studio Custom Generate Scripts</title>
      <link>http://yazilim.aykutasil.com/2017/01/sql-management-studio-custom-generate-scripts/</link>
      <pubDate>Wed, 11 Jan 2017 15:39:47 +0300</pubDate>
      
      <guid>http://yazilim.aykutasil.com/2017/01/sql-management-studio-custom-generate-scripts/</guid>
      <description>&lt;p&gt;SQL Management Studio kullanarak MSSQL e erişim yapmanız size birçok fayda sağlayacaktır. Tabi dezavantajları da yok değil !.&lt;/p&gt;

&lt;p&gt;Senaryomuz şu şekilde;&lt;/p&gt;

&lt;p&gt;Test veritabanında çalışarak kendinizi production veritabanında izole ettiniz ve güvenlik konusunda bir adım öne geçtiniz.&lt;/p&gt;

&lt;p&gt;Test veritabanı ile işlemleriniz bittikten sonra artık sıra geldi oluşturmuş olduğumuz tüm yapıları taşımaya !&lt;/p&gt;

&lt;p&gt;Bu kısım biraz sıkıcı olsa da SQL Management Studio nun buna getirmiş olduğu kolaylıklar var.&lt;/p&gt;

&lt;p&gt;Oluşturmuş olduğumuz tabloların sadece şemasını yani içiindeki veriler olmaksızın taşımak istersek, ( ki bu durum default olarak yapılandıırlmış durumdur ) işimiz oldukça kolay.&lt;/p&gt;

&lt;p&gt;Test veritabanında  ki tabloya sağ tıklayarak aşağıdaki gibi seçim yapmak.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;File&lt;/strong&gt; seçeneği oluşturulan script in bir dosyaya kaydedilmesini&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Clipboard&lt;/strong&gt; seçeneği hafızaya alınmasını ( NotDefteri &amp;gt; CTRL + V diyerek yapıştırabiliriz )
sağlar.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;http://imgur.com/phM7Y8A&#34;&gt;&lt;img src=&#34;http://i.imgur.com/phM7Y8A.png&#34; title=&#34;source: imgur.com&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Tüm oluşturmuş olduğumuz yapıyı bu yöntem ile script haline getirebiliriz.&lt;/p&gt;

&lt;p&gt;Lakin şöyle bir sıkıntımız olduğunu varsayalım.&lt;/p&gt;

&lt;p&gt;Tablomuzu içindeki verilerle beraber taşımak istiyoruz. Yani script in verileride kapsamasını istiyoruz.&lt;/p&gt;

&lt;p&gt;Bunun için ilk olarak tablomuzun bulunduğu veritabanına sağ tıklayarak aşağıdaki adımları gerçekleştiriyoruz.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://imgur.com/TUEWNjo&#34;&gt;&lt;img src=&#34;http://i.imgur.com/TUEWNjo.png&#34; title=&#34;source: imgur.com&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://imgur.com/3pGyapU&#34;&gt;&lt;img src=&#34;http://i.imgur.com/3pGyapU.png&#34; title=&#34;source: imgur.com&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://imgur.com/6xCVWnQ&#34;&gt;&lt;img src=&#34;http://i.imgur.com/6xCVWnQ.png&#34; title=&#34;source: imgur.com&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Aşağıdaki resimde görmüş olduğunuz Data only seçeneği sadece tabloda kayıtlı olan verilerin scriptini çıkarır.&lt;/p&gt;

&lt;p&gt;Schema and data seçeneği hem schema nın hem de verilerin scriptini çıkararı&lt;/p&gt;

&lt;p&gt;Schema only sadece tablonun schema sının scriptini çıkarır.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://imgur.com/dB2gpdH&#34;&gt;&lt;img src=&#34;http://i.imgur.com/dB2gpdH.png&#34; title=&#34;source: imgur.com&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Son ekranda scriptimizin başarılı şekilde oluştuğunu görüyoruz.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://imgur.com/7Nx3w3O&#34;&gt;&lt;img src=&#34;http://i.imgur.com/7Nx3w3O.png&#34; title=&#34;source: imgur.com&#34; /&gt;&amp;lt;/a&lt;/p&gt;

&lt;p&gt;Oluşturmuş olduğumuz script i hangi veritabanında kullanmak istiyorsak oraya giderek query penceresine yapıştırmamız ve çalıştırmamız yeterli olacaktır.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Foreground Service ile FusedLocationApi Kullanımı</title>
      <link>http://yazilim.aykutasil.com/2017/01/foreground-service-ile-fusedlocationapi-kullan%C4%B1m%C4%B1/</link>
      <pubDate>Wed, 11 Jan 2017 15:27:59 +0300</pubDate>
      
      <guid>http://yazilim.aykutasil.com/2017/01/foreground-service-ile-fusedlocationapi-kullan%C4%B1m%C4%B1/</guid>
      <description>&lt;p&gt;Android service yapısı, Android’in temel bileşenlerinden olup genel kullanım amacı yan iş parçacığı oluşturmaktır. Uzun süren işlemler (download vb.) için olmazsa olmaz bileşendir. Android in service bileşenini kendi ihtiyaçlarınız doğrultusunda özelleştirebilir ve uygulamanızı modern bir yapıya kavuşturabilirsiniz.&lt;/p&gt;

&lt;p&gt;Burada yapacağımız örnekte kısaca şu aşamaları görücez;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Service i foreground olarak başlatmak&lt;/li&gt;
&lt;li&gt;Ongoing(devamlı gözüken) notification oluşturmak&lt;/li&gt;
&lt;li&gt;GoogleApiClient a bağlanmak&lt;/li&gt;
&lt;li&gt;Location bilgisini notification da göstermek&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;İlk olarak Service imiz kodlarını yazalım. Gerekli açıklamalar kodların arasında mevcuttur.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ForegroundService.java&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;public class ForegroundService extends Service implements GoogleApiClient.ConnectionCallbacks, GoogleApiClient.OnConnectionFailedListener {

 private static final int LOCATION_NOTIF_ID = 859;
 private static int LocationPeriod = 1000 * 30 ;
 
 private static Notification notification;
 private static GoogleApiClient _googleApiClient = null;
 private static Context mContext;
 private static NotificationCompat.Builder mBuilder;



 @Override
 public void onCreate() {
 super.onCreate();
 mContext = this;
 mBuilder = new NotificationCompat.Builder(mContext);
 }

 @Nullable
 @Override
 public IBinder onBind(Intent intent) {
 return null;
 }

 @Override
 public int onStartCommand(Intent intent, int flags, int startId) {


 // Eğer Service ilk defa çalıştırılıyor ise buildGoogleApiClient fonksiyonu ile GoogleApiClient build ediliyor
 if (_googleApiClient == null) {
 buildGoogleApiClient();
 }
 // GoogleApiClient a bağlanılıyor
 _googleApiClient.connect();

 // Notificaiton gösteriyoruz
 LocationNotification(null, &amp;quot;Konum Bilgisi Yok&amp;quot;);

 // Service imizi foreground olarak başlatıyoruz
 // Foreground service bizden bir notification parametresi ister. Bunun sebebi sürekli ayakta olduğunu kullanıcıya bildirmektir.
 startForeground(LOCATION_NOTIF_ID, notification);

 // Herhangi bir sebeple service imizi durması halinde kendiliğinden tekrar başlaması için START_STICKY dönüyoruz.
 return START_STICKY;
 }


 public synchronized void buildGoogleApiClient() {
 if (_googleApiClient == null) {
 _googleApiClient = new GoogleApiClient.Builder(this)
 .addConnectionCallbacks(this)
 .addOnConnectionFailedListener(this)
 .addApi(LocationServices.API)
 .build();
 }
 }


 @Override
 public void onConnected(@Nullable Bundle bundle) {
 // GoogleApiClient a bağlanıldığında Location isteğinde bulunuyoruz.
 LocationRequest();
 }


 @Override
 public void onConnectionSuspended(int i) {

 }


 @Override
 public void onConnectionFailed(ConnectionResult result) {
 // tekrar bağlanmayı deniyoruz
 _googleApiClient.connect();
 }


 private void LocationRequest() {


 // PRIORITY_BALANCED_POWER_ACCURACY -&amp;gt; hassas konum bilgisine ihtiyacımız yok ise (Network, Cell Tower)
 // PRIORITY_HIGH_ACCURACY -&amp;gt; hassas konum bilgisine ihtiyacımız var ise (GPS)

 final LocationRequest locationRequest = LocationRequest.create()
 .setPriority(LocationRequest.PRIORITY_HIGH_ACCURACY)
 .setInterval((LocationPeriod * 1000)) 
 .setFastestInterval(LOCATION_FASTEST_INTERVAL);


 //final LocationRequest locationRequest1 = LocationRequest.create()
 // .setPriority(LocationRequest.PRIORITY_BALANCED_POWER_ACCURACY)
 // .setInterval((LocationPeriod * 1000))
 // .setFastestInterval(LOCATION_FASTEST_INTERVAL);

 // İhtiyaçlarımız doğrultusunda yapılandırdığımız LocationRequest in gerekliliklerini kontrol ederek, cihazın davranışının otomatik olarak ayarlanması için
 // gerekli Dialog penceresinin çıkmasını sağlar ve Kullanıcının onayını ister

 // Örnek olarak eğer PRIORITY_HIGH_ACCURACY olrarak belirlenmişse ve cihazın GPS i kapalı ise bir Dialog çıkartarak GPS i açmanızı ister
 LocationSettingsRequest locationSettingsRequest = new LocationSettingsRequest.Builder()
 .addLocationRequest(locationRequest)
 .setAlwaysShow(true)
 .build();

 PendingResult&amp;lt;LocationSettingsResult&amp;gt; result =
 LocationServices.SettingsApi.checkLocationSettings(_googleApiClient, locationSettingsRequest);

 // Gösterilen Dilag penceresi ile Kullanıcının etkileşimi sonucunun yakalar
 result.setResultCallback(new ResultCallback&amp;lt;LocationSettingsResult&amp;gt;() {
 @DebugLog
 @Override
 public void onResult(LocationSettingsResult locationSettingsResult) {

 // locationSettingsStates ile cihazın durumunu kontrol ederek akışımızı yönlendirebiliriz
 LocationSettingsStates locationSettingsStates = locationSettingsResult.getLocationSettingsStates();
 
 // Konum dinlenmeye başlanır
 // mLocationListener ile konum değişikliği yakalanır.
 FusedLocationApi.requestLocationUpdates(_googleApiClient, locationRequest, mLocationListener);
 
 //FusedLocationApi.requestLocationUpdates(_googleApiClient, locationRequest1, mLocationListener);
 
 }
 });


 }


 private static LocationListener mLocationListener = new LocationListener() {
 @Override
 public void onLocationChanged(Location location) {


 // Location değişikliğini burada yakalayabiliriz.
 // Belirlemiş olduğumuz periyodik zaman aralığında Location değişikliği kontrol edilecektir.
 }
 };


 
 public ForegroundService() {
 }

 // Bu fonksiyon yardımı ile başka bir sınıftan konum bilgisine erişebiliriz.
 // static olarak tanımlanmış olması bize kolaylık sağlıcaktır.
 public static Location getLastLocation() {
 if (_googleApiClient != null) {
 return FusedLocationApi.getLastLocation(_googleApiClient);
 } else {
 return null;
 }
 }


 // GoogleApiClient nesnemize erişmek istersek bu kod bloğunu kullanabiliriz.
 public static GoogleApiClient getGoogleApiClient() {
 return _googleApiClient;
 }

 
 public static void removeLocationUpdates() {
 if (_googleApiClient != null) {
 FusedLocationApi.removeLocationUpdates(_googleApiClient, mLocationListener);
 }
 }

 @DebugLog
 private static void LocationNotification(Location location, String subText) {
 NotificationManager notificationManager = (NotificationManager) mContext.getSystemService(Context.NOTIFICATION_SERVICE);
 //

 mBuilder.setSmallIcon(R.drawable.ic_stat_device_gps_fixed);
 mBuilder.setTicker(&amp;quot;Konum&amp;quot;);
 //.setSound(RingtoneManager.getDefaultUri(RingtoneManager.TYPE_NOTIFICATION))
 mBuilder.setSubText(subText);
 mBuilder.setOnlyAlertOnce(true);
 mBuilder.setPriority(Notification.PRIORITY_HIGH);


 if (location != null) {
 mBuilder
 .setContentTitle(&amp;quot;Sapma: &amp;quot; + String.valueOf(location.getAccuracy()))
 .setContentText(&amp;quot;Lat: &amp;quot; + String.valueOf(location.getLatitude()) + &amp;quot; , &amp;quot; +
 &amp;quot;Long: &amp;quot; + String.valueOf(location.getLongitude()))
 .setWhen(System.currentTimeMillis())
 .setShowWhen(true)
 .setUsesChronometer(true)
 .setContentIntent(pendingIntent);


 } else {
 mBuilder
 .setContentTitle(&amp;quot;&amp;quot;)
 .setContentText(&amp;quot;&amp;quot;);
 }


 notification = mBuilder.build();
 notificationManager.notify(LOCATION_NOTIF_ID, notification);
 }

 @DebugLog
 @Override
 public void onDestroy() {
 if (_googleApiClient != null) {
 if (_googleApiClient.isConnected()) {
 FusedLocationApi.removeLocationUpdates(_googleApiClient, mLocationListener);
 _googleApiClient.disconnect();
 }
 }
 PeriodicHandler.removeMessages(1);
 stopForeground(true);
 super.onDestroy();
 }


}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Tanımlamış olduğumuz servisi başlatmak için istediğimiz yerden ( Activity , Fragment vb.) aşağıdaki kod bloğunu çalıştırmamız yeterli olucaktır.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;Intent serviceIntent = new Intent(context, ForegroundService.class);
startService(serviceIntent);
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Retrofit Multipart File Upload</title>
      <link>http://yazilim.aykutasil.com/2017/01/retrofit-multipart-file-upload/</link>
      <pubDate>Wed, 11 Jan 2017 01:50:51 +0300</pubDate>
      
      <guid>http://yazilim.aykutasil.com/2017/01/retrofit-multipart-file-upload/</guid>
      <description>

&lt;h1 id=&#34;retrofit-multipart-file-upload&#34;&gt;Retrofit Multipart File Upload&lt;/h1&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;    @DebugLog
    public BelgeResponse BelgeSync(BelgeRequest request, String apiVersion, String appVersion) {
        try {

            Map&amp;lt;String, RequestBody&amp;gt; map = new HashMap&amp;lt;&amp;gt;();
            String belgeDirPath = SuperHelper.getInternalIztopBelgeDir(mContext, request.getGonderiNo());
            File belgeDir = new File(belgeDirPath);
            boolean isDir = belgeDir.isDirectory();
            if (isDir) {
                File[] files = belgeDir.listFiles();
                for (File file : files) {
                    RequestBody requestBody = RequestBody.create(MediaType.parse(&amp;quot;image/jpg&amp;quot;), file);
                    map.put(&amp;quot;file\&amp;quot;; filename=\&amp;quot;&amp;quot; + file.getName(), requestBody);
                }
            }

            //RequestBody requestBodyGonderiNo = RequestBody.create(MediaType.parse(&amp;quot;text/plain&amp;quot;), request.getGonderiNo());
            //RequestBody requestBodyMusId = RequestBody.create(MediaType.parse(&amp;quot;text/plain&amp;quot;), String.valueOf(request.getMusId()));

            RestClient restClient = RestClient.getInstance();
            Call&amp;lt;BelgeResponse&amp;gt; responseCall = restClient.getApiService().Belge(
                    apiVersion,
                    appVersion,
                    request.getGonderiNo(),
                    String.valueOf(request.getMusId()),
                    map);
            BelgeResponse resp = responseCall.execute().body();
            return resp;
        } catch (Exception ex) {
            SuperHelper.CrashlyticsLog(ex);
            return null;
        }
    }
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>