<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Rxjava on Software</title>
    <link>http://yazilim.aykutasil.com/tags/rxjava/</link>
    <description>Recent content in Rxjava on Software</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>tr</language>
    <lastBuildDate>Wed, 11 Jan 2017 18:52:51 +0300</lastBuildDate>
    
	<atom:link href="http://yazilim.aykutasil.com/tags/rxjava/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>RxJava range() KullanÄ±mÄ±</title>
      <link>http://yazilim.aykutasil.com/post/android_rxjava_range/</link>
      <pubDate>Wed, 11 Jan 2017 18:52:51 +0300</pubDate>
      
      <guid>http://yazilim.aykutasil.com/post/android_rxjava_range/</guid>
      <description>RxJava range() KullanÄ±mÄ± **Ã–rnek kod:&amp;ndash;
private void range() { Observable.range(3, 5).subscribeOn(Schedulers.io()) .subscribe(success -&amp;gt; { Log.i(TAG, &amp;quot;val: &amp;quot; + success.toString()); }); }  AÃ§Ä±klama:
Ä°lk deÄŸer 3 kabul edilerek sonraki 5 sayÄ± iÃ§in teker teker onNext() Ã§aÄŸÄ±rÄ±lÄ±r. Yani 3 , 4, 5, 6, 7
YukarÄ±da ki kodun Ã§Ä±ktÄ±sÄ± aÅŸaÄŸÄ±daki gibidir.
I/MainActivity: val: 3 I/MainActivity: val: 4 I/MainActivity: val: 5 I/MainActivity: val: 6 I/MainActivity: val: 7  RxJava candÄ±r ğŸ˜‰</description>
    </item>
    
    <item>
      <title>RxJava scan() KullanÄ±mÄ±</title>
      <link>http://yazilim.aykutasil.com/post/android_rxjava_scan/</link>
      <pubDate>Wed, 11 Jan 2017 18:49:21 +0300</pubDate>
      
      <guid>http://yazilim.aykutasil.com/post/android_rxjava_scan/</guid>
      <description>RxJava scan() KullanÄ±mÄ± RxJava da scan() kullanÄ±mÄ± iki ÅŸekilde olur.
 1. Ä°lk deÄŸer atamasÄ± yapÄ±larak  private void scan() { Observable.just(3, 5, 7, 9) .scan(10,(val1, val2) -&amp;gt; { // Log.i(TAG, &amp;quot;val1: &amp;quot; + val1.toString()); Log.i(TAG, &amp;quot;val2: &amp;quot; + val2.toString()); return val1 + val2; }).subscribeOn(Schedulers.io()) .subscribe(success -&amp;gt; { Log.i(TAG, &amp;quot;Sonuc:&amp;quot; + success.toString()); }); }   2. Ä°lk deÄŸer atamasÄ± yapÄ±lmadan  private void scan() { Observable.just(3, 5, 7, 9) .</description>
    </item>
    
    <item>
      <title>RxJava reduce() KullanÄ±mÄ±</title>
      <link>http://yazilim.aykutasil.com/post/android_rxjava_reduce/</link>
      <pubDate>Wed, 11 Jan 2017 18:42:04 +0300</pubDate>
      
      <guid>http://yazilim.aykutasil.com/post/android_rxjava_reduce/</guid>
      <description>RxJava reduce() KullanÄ±mÄ± reduce() fonskyionu iki ÅŸekilde Ã§alÄ±ÅŸÄ±r;
 1  .reduce(new BiFunction&amp;lt;Integer, Integer, Integer&amp;gt;() { @Override public Integer apply(Integer val1, Integer val2) throws Exception { return null; } })   2  .reduce(10,new BiFunction&amp;lt;Integer, Integer, Integer&amp;gt;() { @Override public Integer apply(Integer val1, Integer val2) throws Exception { return null; } })  1 ile 2 nin farkÄ±, 2 de gÃ¶rÃ¼ldÃ¼ÄŸÃ¼ Ã¼zere fonksiyona baÅŸlangÄ±Ã§ deÄŸeri atanabilmesidir.
AÅŸaÄŸÄ±daki Ã¶rneklerde daha net gÃ¶rebilirsiniz.</description>
    </item>
    
  </channel>
</rss>